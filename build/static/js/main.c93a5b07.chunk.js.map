{"version":3,"sources":["Components/UI/SummaryCounter.module.css","Components/UI/Cart/CartDisplay.module.css","Components/Layout/Layout.module.css","firebase.js","Images/Main.png","Components/Home/Home.js","Components/UI/PendingOrdersCard.js","Components/PendingOrders/PendingOrders.js","Components/UI/SummaryCounter.js","Components/Statistics/Statistics.js","Components/UI/EditCustomerBoard.js","Components/UI/OrderCards1.js","Components/UI/EditCustomerBoard1.js","Components/UI/OrderCards2.js","Components/UI/EditCustomerBoard2.js","Components/UI/OrderCards3.js","Components/UI/OrderCards4.js","Components/CustomerBoard/CustomerBoard.js","Components/UI/Cart/CartDisplayTextField.js","Components/UI/Cart/CartDisplay.js","Components/UI/Popup.js","Components/AddCustomer/AddCustomerForm.js","Images/Home.svg","Store/auth-context.js","Images/User.svg","Images/Dashboard.svg","Images/Cart.svg","Images/Pie.svg","Images/Abc.svg","Components/Utilities/Sidebar.js","Components/Layout/Layout.js","Components/Inventory/InventoryForm.js","Components/UI/Cardddd.js","Components/Inventory/Inventory.js","Components/Login/Login.js","App.js","index.js","Components/UI/OrderCards.module.css","Components/UI/InventoryCard.module.css","Components/AddCustomer/AddCustomerForm.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Home","useState","fetchedData","setFetchedData","fetchedPopularity","setFetchedPopularity","history","useHistory","useEffect","database","ref","on","response","data","val","list","key","push","id","name","Name","value","Value","sort","a","b","mostOrdered","map","item","invOut","setInvOut","orderByChild","equalTo","invItem_out","price","Price","instock","Instock","category","Category","Grid","container","spacing","sm","md","className","Paper","elevation","src","image","onClick","event","preventDefault","alt","height","TotalOrders","Revenue","length","classes","invent_item","style","background","typedish","cost","color","fontSize","PendingOrdersCard","props","item_list","orderDetails","orderName","OrderName","orderQty","OrderQty","OrderDetails_list","xs","click","order_details","order_section","orderID","email","country","address","totalCost","PendingOrders","shipped","setShipped","searchTerm","setSearchterm","shippedItem","Address","commMode","CommMode","Country","Email","OrderDetails","orderNotes","OrderNotes","payment","Payment","TotalCost","wallet","Wallet","OrderID","open","setOpen","setdata","clickHandler","handleClose","Dialog","maxWidth","fullWidth","onClose","DialogTitle","DialogContent","DialogActions","Button","TextField","autoFocus","margin","label","type","variant","onChange","target","filter","toLowerCase","includes","SummaryCounter","summary_name","summary_count","Statistics","popList","marginBottom","isEmpty","trim","EditCustomerBoard","setFormValidity","nameInp","setNameInp","emailInp","setEmailInp","countryInp","setCountryInp","costInp","setCostInp","addressInp","setAddressInp","formValidity","marginLeft","padding","marginTop","error","multiline","rows","console","log","orderId","enteredNameIsValid","enteredEmailIsValid","enteredCountryIsValid","enteredCostIsValid","enteredAddressIsValid","child","update","OrderCards1","action_icons","onUpdate","onDelete","OrderCards2","OrderCards3","CustomerBoard","tBM","setTBM","rOC","setROC","ss","setSS","orderData","setOrderData","tbmItem","rocItem","updatedStatusHandler1","set","Id","remove","open1","setOpen1","tracking","setTracking","messageCommMode","setMessageCommMode","messageID","setMessageID","messageOrderID","setMessageOrderID","tempData","setTempData","handleClose1","mess_commMode","mess_id","mess_orderId","updatedStatusHandler2","updatedStatusHandler3","window","confirm","db_pop","parseInt","Popularity","orderList","once","snap","i","updatedValue","updatedDeleteHandler1","updatedDeleteHandler2","db","updatedDeleteHandler3","updatedDeleteHandler4","tbm_list","roc_list","ss_list","shipped_list","OrderCards4","DialogContentText","border","KeyboardBackspace","handlePayment","CartDisplayTextField","updatedPrice","setUpdatedPrice","defaultValue","newVal","description","qty","updatePriceHandler","CartDisplay","cartItems","onAddHandler","onRemoveHandler","changeCostHandler","itemsPrice","reduce","c","toFixed","Divider","direction","inc_btn","Popup","setItemList","products","setProducts","setCartItems","productList","product","exist","find","onGiftHandler","overflowY","x","updatedList","_path","isSelected","AddCustomerForm","setCommMode","paymentMethod","setPaymentMethod","countryDrop","setCountryDrop","setTotalCost","itemList","finalItemList","setFinalItemList","nameRef","useRef","addressRef","cityRef","stateRef","pincodeRef","idRef","walletRef","orderRef","city","state","pincode","order","comm","formInputValidity","setFormInputValidity","home_text_heading","onSubmit","enteredName","current","enteredAddress","enteredCity","enteredState","enteredPincode","enteredId","enteredWallet","enteredOrder","enteredItemList","enteredCityIsValid","enteredStateIsValid","enteredPincodeIsValid","enteredIdIsValid","enteredWalletIsValid","enteredOrderIsValid","enteredCommIsValid","enteredPaymentMethodIsValid","enteredItemListIsValid","uniq_key","Date","now","finalAddress","cus_form","inputRef","FormControl","InputLabel","Select","labelId","MenuItem","submit_btn","backgroundColor","right_grid","width","order_detail","Alert","severity","items","AuthContext","React","createContext","token","isLoggedIn","login","logout","AuthContextProvider","setToken","contextValue","Provider","children","_excluded","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHome","_ref","svgRef","title","titleId","xmlns","viewBox","d","transform","ForwardRef","SvgUser","SvgDashboard","SvgCart","SvgPie","SvgAbc","fill","Sidebar","authCtx","useContext","to","activeClassName","borderRadius","Layout","layout","main","InventoryForm","categoryDrop","setCategoryDrop","costRef","inputMode","enteredCost","enteredCategoryIsValid","Cardddd","updatedStatusHandler","handleChange","status_btn","Inventory","finalList","setFinalList","invList","updateStatus","Login","emailRef","passwordRef","align","Avatar","enteredEmail","enteredPassword","fetch","method","body","JSON","stringify","password","returnSecureToken","headers","then","res","ok","json","Error","idToken","catch","err","alert","message","placeholder","required","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c93a5b07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary_name\":\"SummaryCounter_summary_name__2CpUS\",\"summ_card_col\":\"SummaryCounter_summ_card_col__h4be_\",\"summ_card\":\"SummaryCounter_summ_card__1ZC6q\",\"summary_count\":\"SummaryCounter_summary_count__3mwid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inc_btn\":\"CartDisplay_inc_btn__U8i_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__fRypw\",\"main\":\"Layout_main__1Pr79\"};","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCir6THbXYEXyts-owoowDVRo7XVXqZPFQ\",\r\n    authDomain: \"rootlab-webportal.firebaseapp.com\",\r\n    databaseURL: \"https://rootlab-webportal-default-rtdb.firebaseio.com\",\r\n    projectId: \"rootlab-webportal\",\r\n    storageBucket: \"rootlab-webportal.appspot.com\",\r\n    messagingSenderId: \"693832568080\",\r\n    appId: \"1:693832568080:web:e62f5cb91585ae3a0a6995\",\r\n    measurementId: \"G-4WK99PW9K6\"\r\n};  \r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","export default __webpack_public_path__ + \"static/media/Main.ac3f8970.png\";","import { useState, useEffect } from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport \"./Home.css\";\r\n\r\nimport firebase from \"../../firebase\";\r\nimport image from \"../../Images/Main.png\";\r\nimport classes from '../UI/InventoryCard.module.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Home = () => {\r\n\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n    const [fetchedPopularity, setFetchedPopularity] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref('Orders/')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            setFetchedData(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref('Orders/Popularity')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let list = [];\r\n            for (const key in data) {\r\n                list.push({\r\n                    id: key,\r\n                    name: data[key].Name,\r\n                    value: data[key].Value\r\n                })\r\n            }\r\n            setFetchedPopularity(list);\r\n        });\r\n    }, []);\r\n\r\n    fetchedPopularity.sort((a, b) => b.value - a.value);\r\n\r\n    var mostOrdered = fetchedPopularity.map(item => item.name);\r\n\r\n    // ########### OUT OF STOCK\r\n\r\n    const [invOut, setInvOut] = useState([]);\r\n    useEffect(() => {\r\n        const db1 = firebase.database().ref(\"Inventory\");\r\n        db1.orderByChild(\"Instock\").equalTo(false).on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let invItem_out = []\r\n            for (const key in data) {\r\n                invItem_out.push({\r\n                    id: key,\r\n                    price: data[key].Price,\r\n                    instock: data[key].Instock,\r\n                    category: data[key].Category,\r\n                    name: data[key].Name,\r\n                });\r\n            }\r\n            setInvOut(invItem_out);\r\n        });\r\n    }, []);\r\n\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        history.push('/AddCustomerForm');\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item sm={12} md={7}>\r\n                <h2 className=\"home_heading\">Hi User!</h2>\r\n                <p className=\"home_text_alt\">Welcome back</p>\r\n\r\n                <p className=\"home_text\">Add customer</p>\r\n\r\n                <Paper elevation={0} className=\"paper_1\">\r\n                    <img src={image} onClick={clickHandler} alt=\"Home\" height={200} />\r\n                </Paper>\r\n\r\n                <p className=\"home_text\">Statistics</p>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_1\">\r\n                            <h1>{fetchedData.TotalOrders}</h1>\r\n                            <p>Total Orders</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_2\">\r\n                            <h1>{mostOrdered[0]}</h1>\r\n                            <p>Most Ordered</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_3\">\r\n                            <h1>{fetchedData.Revenue}</h1>\r\n                            <p>Total Revenue</p>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item sm={12} md={5}>\r\n                <p className=\"home_text\">Out Of Stock</p>\r\n                {invOut.length === 0 && <p>No items are out of stock!</p>}\r\n                <Grid container spacing={3} className=\"paper_2\">\r\n                    {\r\n                        invOut.map(item => {\r\n                            return (\r\n                                <Grid item sm={12} key={item.id}>\r\n                                    <div className={classes.invent_item} style={{ background: \"#FFE5E5\" }}>\r\n                                        <p className={classes.typedish}>{item.name} <span className={classes.cost} >&#36;{item.price}</span></p>\r\n                                        <p>{item.category}</p>\r\n                                        <br></br>\r\n                                        <p style={{ color: \"#FF0000\", fontSize: \"14px\" }}>OUT OF STOCK</p>\r\n                                    </div>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nconst PendingOrdersCard = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n\r\n    const handleClickOpen = (data) => {\r\n        props.click(data);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        < Grid item xs={4} onClick={() => handleClickOpen(props)} >\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p><b><span>Name</span></b> - {props.name}</p>\r\n\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><b><span>Order ID</span></b> - {props.orderID}</p>\r\n                    <p><b><span>ID</span></b> - {props.email}</p>\r\n                    <p><b><span >Country</span></b> - {props.country}</p>\r\n                    <p><b><span >Address</span></b> - {props.address}</p>\r\n                    <p><b><span >Total Cost</span></b> - {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n            </Paper>\r\n        </Grid >\r\n\r\n    );\r\n}\r\n\r\nexport default PendingOrdersCard;","import { Grid } from '@material-ui/core';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport '../PendingOrders/PendingOrders.css';\r\n\r\nimport firebase from \"../../firebase\";\r\nimport PendingOrdersCard from '../UI/PendingOrdersCard';\r\nimport { TextField } from '@mui/material';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\n\r\nconst PendingOrders = () => {\r\n    const [shipped, setShipped] = useState([]);\r\n    const [searchTerm, setSearchterm] = useState('');\r\n    useEffect(() => {\r\n        const db = firebase.database().ref(\"OrderStatus/Shipped\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let shippedItem = [];\r\n            for (const key in data) {\r\n                shippedItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    commMode: data[key].CommMode,\r\n                    country: data[key].Country,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    orderNotes: data[key].OrderNotes,\r\n                    payment: data[key].Payment,\r\n                    totalCost: data[key].TotalCost,\r\n                    wallet: data[key].Wallet,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            setShipped(shippedItem);\r\n        });\r\n    }, []);\r\n\r\n    // const shipped_list = shipped.map(item => (\r\n    //     <PendingOrdersCard\r\n    //         key={item.id}\r\n    //         id={item.id}\r\n    //         address={item.address}\r\n    //         country={item.country}\r\n    //         email={item.email}\r\n    //         name={item.name}\r\n    //         orderDetails={item.orderDetails}\r\n    //         totalCost={item.totalCost}\r\n    //         orderID={item.orderID}\r\n    //     />\r\n    // ));\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setdata] = useState([]);\r\n    const clickHandler = (data) =>{\r\n        // console.log(\"here\");\r\n        setOpen(true);\r\n        // console.log(data);\r\n        setdata(data)\r\n\r\n    }\r\n    // console.log(odata);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Grid container>\r\n            <Dialog open={open} maxWidth=\"sm\" fullWidth onClose={handleClose}>\r\n                <DialogTitle>ORDER DETAILS</DialogTitle>\r\n                <DialogContent>\r\n                    <p><b>Address : </b>{data.address}</p>\r\n                    <p><b>Order ID : </b>{data.id}</p>\r\n                    <p><b>Country : </b>{data.country}</p>\r\n                    <br></br>\r\n                    <p><b>Communication Mode : </b>{data.commMode}</p>\r\n                    <p><b>ID :</b> {data.email}</p>\r\n                    <p><b>Name :</b> {data.name}</p>\r\n                    <p><b>OrderID :</b> {data.orderID}</p>\r\n                    <br></br>\r\n                    \r\n                    <p><b>Payment:</b> {data.payment}</p>\r\n                    <p><b>Total Cost : </b>AUD {data.totalCost}</p>\r\n                    <p><b>Wallet :</b> {data.wallet}</p>\r\n                    <br></br>\r\n                    <p><b>Order Notes :</b> {data.orderNotes}</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CLOSE</Button>\r\n                    \r\n                </DialogActions>\r\n            </Dialog>\r\n            \r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <h2>Customer's Orders</h2>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField className=\"txtfld\"\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Search By Order ID\"\r\n                        type=\"search\"\r\n                        variant=\"standard\"\r\n                        onChange={event => { setSearchterm(event.target.value) }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <p>&nbsp;</p>\r\n            <Grid container spacing={8} className='box'>\r\n\r\n                {\r\n                    shipped.filter(val => {\r\n                        if (searchTerm === \"\") {\r\n                            // console.log(val.address);\r\n                            return val;\r\n                        }\r\n                        else if (val.orderID.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                            return val;\r\n                        }\r\n                        // return val;\r\n                    }).map((item, key) => {\r\n                        return (\r\n                            <PendingOrdersCard\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                address={item.address}\r\n                                commMode={item.commMode}\r\n                                country={item.country}\r\n                                email={item.email}\r\n                                name={item.name}\r\n                                orderDetails={item.orderDetails}\r\n                                orderNotes={item.orderNotes}\r\n                                payment={item.payment}\r\n                                totalCost={item.totalCost}\r\n                                wallet={item.wallet}\r\n                                orderID={item.orderID}\r\n                                click={clickHandler}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n                {/* {shipped_list} */}\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default PendingOrders;\r\n","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport classes from './SummaryCounter.module.css';\r\n\r\nconst SummaryCounter = (props) => {\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={10}>\r\n                <Grid container className={classes.summary_name}>\r\n                    {/* <Paper elevation={2}></Paper> */}\r\n                    {/* <div className={classes.summ_card_col}></div> */}\r\n                    <p>{props.name}</p>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <div className={classes.summary_count}>\r\n                    <p>{props.value}</p>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SummaryCounter;","import { useEffect, useState } from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport './Statistics.css';\r\nimport SummaryCounter from '../UI/SummaryCounter';\r\nimport image from \"../../Images/Main.png\";\r\nimport firebase from \"../../firebase\";\r\n\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Statistics = () => {\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n    const [fetchedPopularity, setFetchedPopularity] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref('Orders/')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            setFetchedData(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref('Orders/Popularity')\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let list = [];\r\n            for (const key in data) {\r\n                list.push({\r\n                    id: key,\r\n                    name: data[key].Name,\r\n                    value: data[key].Value\r\n                })\r\n            }\r\n            setFetchedPopularity(list);\r\n        });\r\n    }, []);\r\n\r\n    fetchedPopularity.sort((a, b) => b.value - a.value);\r\n    \r\n    // console.log(fetchedPopularity)\r\n    \r\n    const popList = fetchedPopularity.map(item => (\r\n        <SummaryCounter\r\n            key={item.id}\r\n            name={item.name}\r\n            value={item.value}\r\n        />\r\n    ));\r\n\r\n    // console.log(popList);\r\n\r\n    // console.log(fetchedPopularity);\r\n    var mostOrdered = fetchedPopularity.map(item => item.name);\r\n\r\n    // console.log(mostOrdered[0])\r\n\r\n    const clickHandler = (event) =>{\r\n        event.preventDefault();\r\n        history.push('/AddCustomerForm');    \r\n    }\r\n\r\n    return (\r\n\r\n        <Grid container spacing={8}>\r\n\r\n            <Grid item sm={12} md={7} >\r\n                <h2 className=\"home_heading\">Statistics</h2>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_1\">\r\n                            <h1>{fetchedData.TotalOrders}</h1>\r\n                            <br></br>\r\n                            <p>Total Orders</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_2\">\r\n                            <h1>{mostOrdered[0]}</h1>\r\n                            <br></br>\r\n                            <p>Most Ordered</p>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={4}>\r\n                        <div className=\"orders_3\">\r\n                            {/* <h1>{fetchedData}</h1> */}\r\n                            <h1>{fetchedData.Revenue}</h1>\r\n                            <br></br>\r\n                            <p>Total Revenue</p>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <p className=\"home_text\">Add customer</p>\r\n\r\n                <Paper elevation={0} className=\"paper_1\">\r\n                    <img src={image} onClick={clickHandler} alt=\"Add Customer\" height={200} />\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <Grid item sm={12} md={4}>\r\n                <p className=\"home_text\" style={{ marginBottom: \"20px\" }}>Popularity</p>\r\n\r\n                {popList}\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Statistics;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport firebase from \"../../firebase\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\n\r\nexport default function EditCustomerBoard(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setFormValidity({\r\n            name: true,\r\n            email: true,\r\n            country: true,\r\n            cost: true,\r\n            address: true\r\n        })\r\n    };\r\n\r\n    const [nameInp, setNameInp] = useState(props.name);\r\n    const [emailInp, setEmailInp] = useState(props.email);\r\n    const [countryInp, setCountryInp] = useState(props.country);\r\n    const [costInp, setCostInp] = useState(props.cost);\r\n    const [addressInp, setAddressInp] = useState(props.address);\r\n\r\n    const [formValidity, setFormValidity] = useState({\r\n        name: true,\r\n        email: true,\r\n        country: true,\r\n        cost: true,\r\n        address: true\r\n    })\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        console.log(props.orderId);\r\n\r\n        const enteredNameIsValid = !isEmpty(nameInp);\r\n        const enteredEmailIsValid = !isEmpty(emailInp);\r\n        const enteredCountryIsValid = !isEmpty(countryInp);\r\n        const enteredCostIsValid = !isEmpty(costInp);\r\n        const enteredAddressIsValid = !isEmpty(addressInp);\r\n\r\n        setFormValidity({\r\n            name: enteredNameIsValid,\r\n            email: enteredEmailIsValid,\r\n            country: enteredCountryIsValid,\r\n            cost: enteredCostIsValid,\r\n            address: enteredAddressIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredEmailIsValid && enteredCostIsValid && enteredCountryIsValid && enteredAddressIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        console.log(nameInp);\r\n        console.log(emailInp);\r\n        console.log(countryInp);\r\n        console.log(costInp);\r\n        console.log(addressInp);\r\n\r\n        const db = firebase.database().ref('/OrderStatus/TBM').child(props.orderId);\r\n        db.update({\r\n            Name: nameInp,\r\n            Email: emailInp,\r\n            Country: countryInp,\r\n            TotalCost: costInp,\r\n            Address: addressInp\r\n        })\r\n\r\n        setOpen(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"text\" onClick={handleClickOpen} style={{color: \"#535353\", marginLeft: \"-10px\" ,height: \"60px\"}}>\r\n            <p>\r\n                   Edit Details </p>\r\n                <EditIcon style={{ fontSize: \"20px\", color: \"#535353\", marginLeft: \"10px\"}}></EditIcon>\r\n            </Button>\r\n            <Dialog open={open} maxWidth=\"md\" onClose={handleClose} style={{ color: \"#DFDFDF\", padding: \"30px 50px 30px 50px\" }}>\r\n                <DialogTitle>EDIT DETAILS</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <Grid container style={{ marginTop: \"0px\" }}>\r\n                        <Grid container sm={12} spacing={0} >\r\n\r\n                            <Grid container xs={12} spacing={4}>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.name ? (\r\n                                        <TextField value={nameInp} onChange={(a) => setNameInp(a.target.value)} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error value={nameInp} onChange={(a) => setNameInp(a.target.value)} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.email ? (\r\n                                        <TextField value={emailInp} onChange={a => setEmailInp(a.target.value)} type=\"text\" fullWidth label=\"Email\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error value={emailInp} onChange={a => setEmailInp(a.target.value)} type=\"text\" fullWidth label=\"Email\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.country ? (\r\n                                        <TextField value={countryInp} onChange={a => setCountryInp(a.target.value)} type=\"text\" fullWidth label=\"Country\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error value={countryInp} onChange={a => setCountryInp(a.target.value)} type=\"text\" fullWidth label=\"Country\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.cost ? (\r\n                                        <TextField value={costInp} onChange={a => setCostInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField value={costInp} onChange={a => setCostInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    {formValidity.address ? (\r\n                                        <TextField value={addressInp} onChange={a => setAddressInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Address\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error value={addressInp} onChange={a => setAddressInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Address\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={submitHandler}>SUBMIT</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditCustomerBoard from \"./EditCustomerBoard\";\r\n\r\nconst OrderCards1 = (props) => {\r\n\r\n    // console.log(item);\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n\r\n\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n    const handleUpdateStatus = (data) => {\r\n        props.onUpdate(data);\r\n    };\r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n    \r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        <CheckCircleIcon style={{ fontSize: \"25px\", color: \"#18CC67\" }} onClick={() => { handleUpdateStatus(props) }} />\r\n                        <CancelIcon style={{ fontSize: \"25px\", color: \"#FF0000\", marginLeft: \"10px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                <p><b><span>ID</span></b> - {props.email}</p>\r\n                    <p><b><span >Country</span></b> - {props.country}</p>\r\n                    <p><b><span >Address</span></b> - {props.address}</p>\r\n                    <p><b><span >Total Cost</span></b> - AUD {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n        \r\n                <EditCustomerBoard name={props.name} email={props.email} country={props.country} address={props.address} cost={props.totalCost} orderId={props.orderID}></EditCustomerBoard>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards1;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport firebase from \"../../firebase\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\n\r\nexport default function EditCustomerBoard(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setFormValidity({\r\n            name: true,\r\n            email: true,\r\n            country: true,\r\n            cost: true,\r\n            address: true\r\n        })\r\n    };\r\n\r\n    const [nameInp, setNameInp] = useState(props.name);\r\n    const [emailInp, setEmailInp] = useState(props.email);\r\n    const [countryInp, setCountryInp] = useState(props.country);\r\n    const [costInp, setCostInp] = useState(props.cost);\r\n    const [addressInp, setAddressInp] = useState(props.address);\r\n\r\n    const [formValidity, setFormValidity] = useState({\r\n        name: true,\r\n        email: true,\r\n        country: true,\r\n        cost: true,\r\n        address: true\r\n    })\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        console.log(props.orderId);\r\n\r\n        const enteredNameIsValid = !isEmpty(nameInp);\r\n        const enteredEmailIsValid = !isEmpty(emailInp);\r\n        const enteredCountryIsValid = !isEmpty(countryInp);\r\n        const enteredCostIsValid = !isEmpty(costInp);\r\n        const enteredAddressIsValid = !isEmpty(addressInp);\r\n\r\n        setFormValidity({\r\n            name: enteredNameIsValid,\r\n            email: enteredEmailIsValid,\r\n            country: enteredCountryIsValid,\r\n            cost: enteredCostIsValid,\r\n            address: enteredAddressIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredEmailIsValid && enteredCostIsValid && enteredCountryIsValid && enteredAddressIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        console.log(nameInp);\r\n        console.log(emailInp);\r\n        console.log(countryInp);\r\n        console.log(costInp);\r\n        console.log(addressInp);\r\n\r\n        const db = firebase.database().ref('/OrderStatus/ROC').child(props.orderId);\r\n        db.update({\r\n            Name: nameInp,\r\n            Email: emailInp,\r\n            Country: countryInp,\r\n            TotalCost: costInp,\r\n            Address: addressInp\r\n        })\r\n\r\n        setOpen(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"text\" onClick={handleClickOpen} style={{color: \"#535353\", marginLeft: \"-10px\" ,height: \"60px\"}}>\r\n            <p>\r\n                   Edit Details </p>\r\n                <EditIcon style={{ fontSize: \"20px\", color: \"#535353\", marginLeft: \"10px\"}}></EditIcon>\r\n            </Button>\r\n            <Dialog open={open} maxWidth=\"md\" onClose={handleClose} style={{ color: \"#DFDFDF\", padding: \"30px 50px 30px 50px\" }}>\r\n                <DialogTitle>EDIT DETAILS</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <Grid container style={{ marginTop: \"0px\" }}>\r\n                        <Grid container sm={12} spacing={0} >\r\n\r\n                            <Grid container xs={12} spacing={4}>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.name ? (\r\n                                        <TextField value={nameInp} onChange={(a) => setNameInp(a.target.value)} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error value={nameInp} onChange={(a) => setNameInp(a.target.value)} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.email ? (\r\n                                        <TextField value={emailInp} onChange={a => setEmailInp(a.target.value)} type=\"text\" fullWidth label=\"Email\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error value={emailInp} onChange={a => setEmailInp(a.target.value)} type=\"text\" fullWidth label=\"Email\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.country ? (\r\n                                        <TextField value={countryInp} onChange={a => setCountryInp(a.target.value)} type=\"text\" fullWidth label=\"Country\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error value={countryInp} onChange={a => setCountryInp(a.target.value)} type=\"text\" fullWidth label=\"Country\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.cost ? (\r\n                                        <TextField value={costInp} onChange={a => setCostInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField value={costInp} onChange={a => setCostInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    {formValidity.address ? (\r\n                                        <TextField value={addressInp} onChange={a => setAddressInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Address\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error value={addressInp} onChange={a => setAddressInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Address\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={submitHandler}>SUBMIT</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditCustomerBoard1 from \"./EditCustomerBoard1\";\r\n// import TrackingModal from \"./TrackingModal\";\r\n\r\nconst OrderCards2 = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n    const handleUpdateStatus = (data) => {\r\n        props.onUpdate(data);\r\n    };\r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n\r\n    // const editHandler = (event) =>{\r\n    //     event.preventDefault();\r\n    //     console.log(\"clicked\")\r\n    // }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        <CheckCircleIcon style={{ fontSize: \"25px\", color: \"#18CC67\" }}\r\n                            onClick={() => { handleUpdateStatus(props) }}\r\n                        >\r\n                        </CheckCircleIcon>\r\n                        {/* <TrackingModal orderId={props.orderID} commMode={props.commMode} id={props.email} handleP={handlePayment} /> */}\r\n\r\n                        <CancelIcon style={{ fontSize: \"25px\", color: \"#FF0000\", marginLeft: \"10px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                <p><b><span>ID</span></b> - {props.email}</p>\r\n                    <p><b><span >Country</span></b> - {props.country}</p>\r\n                    <p><b><span >Address</span></b> - {props.address}</p>\r\n                    <p><b><span >Total Cost</span></b> - AUD {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n\r\n\r\n                <EditCustomerBoard1 name={props.name} email={props.email} country={props.country} address={props.address} cost={props.totalCost} orderId={props.orderID}></EditCustomerBoard1>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards2;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nimport firebase from \"../../firebase\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\n\r\nexport default function EditCustomerBoard(props) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setFormValidity({\r\n            name: true,\r\n            email: true,\r\n            country: true,\r\n            cost: true,\r\n            address: true\r\n        })\r\n    };\r\n\r\n    const [nameInp, setNameInp] = useState(props.name);\r\n    const [emailInp, setEmailInp] = useState(props.email);\r\n    const [countryInp, setCountryInp] = useState(props.country);\r\n    const [costInp, setCostInp] = useState(props.cost);\r\n    const [addressInp, setAddressInp] = useState(props.address);\r\n\r\n    const [formValidity, setFormValidity] = useState({\r\n        name: true,\r\n        email: true,\r\n        country: true,\r\n        cost: true,\r\n        address: true\r\n    })\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        console.log(props.orderId);\r\n\r\n        const enteredNameIsValid = !isEmpty(nameInp);\r\n        const enteredEmailIsValid = !isEmpty(emailInp);\r\n        const enteredCountryIsValid = !isEmpty(countryInp);\r\n        const enteredCostIsValid = !isEmpty(costInp);\r\n        const enteredAddressIsValid = !isEmpty(addressInp);\r\n\r\n        setFormValidity({\r\n            name: enteredNameIsValid,\r\n            email: enteredEmailIsValid,\r\n            country: enteredCountryIsValid,\r\n            cost: enteredCostIsValid,\r\n            address: enteredAddressIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredEmailIsValid && enteredCostIsValid && enteredCountryIsValid && enteredAddressIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        console.log(nameInp);\r\n        console.log(emailInp);\r\n        console.log(countryInp);\r\n        console.log(costInp);\r\n        console.log(addressInp);\r\n\r\n        const db = firebase.database().ref('/OrderStatus/SS').child(props.orderId);\r\n        db.update({\r\n            Name: nameInp,\r\n            Email: emailInp,\r\n            Country: countryInp,\r\n            TotalCost: costInp,\r\n            Address: addressInp\r\n        })\r\n\r\n        setOpen(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"text\" onClick={handleClickOpen} style={{color: \"#535353\", marginLeft: \"-10px\" ,height: \"60px\"}}>\r\n            <p>\r\n                   Edit Details </p>\r\n                <EditIcon style={{ fontSize: \"20px\", color: \"#535353\", marginLeft: \"10px\"}}></EditIcon>\r\n            </Button>\r\n            <Dialog open={open} maxWidth=\"md\" onClose={handleClose} style={{ color: \"#DFDFDF\", padding: \"30px 50px 30px 50px\" }}>\r\n                <DialogTitle>EDIT DETAILS</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <Grid container style={{ marginTop: \"0px\" }}>\r\n                        <Grid container sm={12} spacing={0} >\r\n\r\n                            <Grid container xs={12} spacing={4}>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.name ? (\r\n                                        <TextField value={nameInp} onChange={(a) => setNameInp(a.target.value)} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error value={nameInp} onChange={(a) => setNameInp(a.target.value)} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.email ? (\r\n                                        <TextField value={emailInp} onChange={a => setEmailInp(a.target.value)} type=\"text\" fullWidth label=\"Email\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error value={emailInp} onChange={a => setEmailInp(a.target.value)} type=\"text\" fullWidth label=\"Email\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.country ? (\r\n                                        <TextField value={countryInp} onChange={a => setCountryInp(a.target.value)} type=\"text\" fullWidth label=\"Country\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error value={countryInp} onChange={a => setCountryInp(a.target.value)} type=\"text\" fullWidth label=\"Country\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.cost ? (\r\n                                        <TextField value={costInp} onChange={a => setCostInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField value={costInp} onChange={a => setCostInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    {formValidity.address ? (\r\n                                        <TextField value={addressInp} onChange={a => setAddressInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Address\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error value={addressInp} onChange={a => setAddressInp(a.target.value)} fullWidth id=\"standard-multiline-static\" label=\"Address\" variant=\"standard\" multiline rows={2}></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>CANCEL</Button>\r\n                    <Button onClick={submitHandler}>SUBMIT</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport EditCustomerBoard2 from \"./EditCustomerBoard2\";\r\n\r\nconst OrderCards3 = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n\r\n    const handleUpdateStatus = (data) => {\r\n        props.onUpdate(data);\r\n    };\r\n    \r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        \r\n                        <CheckCircleIcon style={{ fontSize: \"25px\", color: \"#18CC67\" }} onClick={()=>{handleUpdateStatus(props)}} />\r\n                        <CancelIcon style={{ fontSize: \"25px\", color: \"#FF0000\", marginLeft: \"10px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><b><span>ID</span></b> - {props.email}</p>\r\n                    <p><b><span >Country</span></b> - {props.country}</p>\r\n                    <p><b><span >Address</span></b> - {props.address}</p>\r\n                    <p><b><span >Total Cost</span></b> - AUD {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n\r\n                 <EditCustomerBoard2 name={props.name} email={props.email} country={props.country} address={props.address} cost={props.totalCost} orderId={props.orderID}></EditCustomerBoard2>\r\n                 </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards3;","import React from \"react\";\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nimport classes from './OrderCards.module.css';\r\n\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n// import EditCustomerBoard3 from \"./EditCustomerBoard3\";\r\n\r\nconst OrderCards3 = (props) => {\r\n\r\n    const item_list = [];\r\n    for (const key in props.orderDetails) {\r\n\r\n        item_list.push({\r\n            id: key,\r\n            orderName: props.orderDetails[key].OrderName,\r\n            orderQty: props.orderDetails[key].OrderQty,\r\n            price: props.orderDetails[key].Price\r\n        })\r\n    }\r\n    const OrderDetails_list = item_list.map(item => {\r\n        if (item.price === 0) {\r\n            return (<p style={{ color: \"#18CC67\" }} key={item.id}>{item.orderQty} X - {item.orderName} (Gift)</p>)\r\n        }\r\n        else {\r\n            return (<p key={item.id}>{item.orderQty} X - {item.orderName}</p>)\r\n        }\r\n    });\r\n    const handleDeleteStatus = (data) => {\r\n        props.onDelete(data);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={0} className={classes.order_details}>\r\n                <div className={classes.order_section}>\r\n                    <p>{props.name}</p>\r\n                    {/* <p>{props.orderID}</p> */}\r\n                    <div className={classes.action_icons}>\r\n                        {/* <CheckCircleIcon style={{ fontSize: \"35px\", color: \"#18CC67\" }} onClick={()=>{handleUpdateStatus(props)}} /> */}\r\n                        <CancelIcon style={{ fontSize: \"25px\", color: \"#FF0000\", marginLeft: \"20px\" }} onClick={() => { handleDeleteStatus(props) }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.order_section}>\r\n                    <p><b><span>ID</span></b> - {props.email}</p>\r\n                    <p><b><span >Country</span></b> - {props.country}</p>\r\n                    <p><b><span >Address</span></b> - {props.address}</p>\r\n                    <p><b><span >Total Cost</span></b> - AUD {props.totalCost}</p>\r\n                </div>\r\n\r\n                {OrderDetails_list}\r\n       \r\n                {/* <EditCustomerBoard3 name={props.name} email={props.email} country={props.country} address={props.address} cost={props.totalCost} orderId={props.orderID}></EditCustomerBoard3> */}\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default OrderCards3;","import { Grid } from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport OrderCards1 from '../UI/OrderCards1';\r\nimport OrderCards2 from '../UI/OrderCards2';\r\nimport OrderCards3 from '../UI/OrderCards3';\r\nimport OrderCards4 from '../UI/OrderCards4';\r\nimport React from 'react';\r\nimport './CustomerBoard.css';\r\nimport firebase from \"../../firebase\";\r\n// import TrackingModal from '../UI/TrackingModal';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\n//new\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, TextField } from '@material-ui/core';\r\nimport { KeyboardBackspace } from '@mui/icons-material';\r\n\r\nconst CustomerBoard = () => {\r\n\r\n    const [tBM, setTBM] = useState([]);\r\n    const [rOC, setROC] = useState([]);\r\n    const [ss, setSS] = useState([]);\r\n    const [shipped, setShipped] = useState([]);\r\n    const [orderData, setOrderData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref(\"OrderStatus/TBM\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let tbmItem = [];\r\n            for (const key in data) {\r\n                tbmItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    commMode: data[key].CommMode,\r\n                    country: data[key].Country,\r\n                    // customerNotes: data[key].CustomerNotes,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    orderNotes: data[key].OrderNotes,\r\n                    payment: data[key].Payment,\r\n                    totalCost: data[key].TotalCost,\r\n                    wallet: data[key].Wallet,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            // console.log(tbmItem)\r\n            setTBM(tbmItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref(\"OrderStatus/ROC\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let rocItem = [];\r\n            for (const key in data) {\r\n                rocItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    commMode: data[key].CommMode,\r\n                    country: data[key].Country,\r\n                    // customerNotes: data[key].CustomerNotes,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    orderNotes: data[key].OrderNotes,\r\n                    payment: data[key].Payment,\r\n                    totalCost: data[key].TotalCost,\r\n                    wallet: data[key].Wallet,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            // console.log(rocItem)\r\n            setROC(rocItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref(\"OrderStatus/SS\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let rocItem = [];\r\n            for (const key in data) {\r\n                rocItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    commMode: data[key].CommMode,\r\n                    country: data[key].Country,\r\n                    // customerNotes: data[key].CustomerNotes,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    orderNotes: data[key].OrderNotes,\r\n                    payment: data[key].Payment,\r\n                    totalCost: data[key].TotalCost,\r\n                    wallet: data[key].Wallet,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            // console.log(rocItem)\r\n            setSS(rocItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db = firebase.database().ref(\"OrderStatus/Shipped\");\r\n        db.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let shippedItem = [];\r\n            for (const key in data) {\r\n                shippedItem.push({\r\n                    id: key,\r\n                    address: data[key].Address,\r\n                    commMode: data[key].CommMode,\r\n                    country: data[key].Country,\r\n                    // customerNotes: data[key].CustomerNotes,\r\n                    email: data[key].Email,\r\n                    name: data[key].Name,\r\n                    orderDetails: data[key].OrderDetails,\r\n                    orderNotes: data[key].OrderNotes,\r\n                    payment: data[key].Payment,\r\n                    totalCost: data[key].TotalCost,\r\n                    wallet: data[key].Wallet,\r\n                    orderID: data[key].OrderID\r\n                });\r\n            }\r\n            // console.log(shippedItem)\r\n            setShipped(shippedItem);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const db_update = firebase.database().ref('/Orders');\r\n        db_update.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            setOrderData(data);\r\n            // console.log(data)\r\n        })\r\n    }, []);\r\n\r\n    //  ######################## UPDATED STATUS\r\n\r\n    const updatedStatusHandler1 = (data) => {\r\n        const db = firebase.database().ref('/OrderStatus/ROC/').child(data.id);\r\n        // // console.log(db);\r\n        // console.log(data);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            CommMode: data.commMode,\r\n            Country: data.country,\r\n            // CustomerNotes: data.customerNotes,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            OrderNotes: data.orderNotes,\r\n            Payment: data.payment,\r\n            TotalCost: data.totalCost,\r\n            Wallet: data.wallet,\r\n            OrderID: data.orderID\r\n        });\r\n        const rem_db = firebase.database().ref('/OrderStatus/TBM/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [open1, setOpen1] = useState(false);\r\n    const [tracking, setTracking] = useState();\r\n\r\n    const [messageCommMode, setMessageCommMode] = useState();\r\n    const [messageID, setMessageID] = useState();\r\n    const [messageOrderID, setMessageOrderID] = useState();\r\n    const [tempData, setTempData] = useState({});\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleBack = (data) => {\r\n        data.preventDefault();\r\n        setOpen1(false);\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleNext1 = () => {\r\n        setOpen(false);\r\n        setOpen1(true);\r\n    }\r\n\r\n    let mess_commMode = '';\r\n    let mess_id = '';\r\n    let mess_orderId = '';\r\n\r\n    let temp_Data = [];\r\n\r\n    const updatedStatusHandler2 = (data) => {\r\n\r\n        handleClickOpen();\r\n\r\n        mess_commMode = data.commMode;\r\n        setMessageCommMode(mess_commMode);\r\n\r\n        mess_id = data.email;\r\n        setMessageID(mess_id);\r\n\r\n        mess_orderId = data.id;\r\n        setMessageOrderID(mess_orderId);\r\n\r\n        temp_Data = data;\r\n        // console.log(temp_Data);\r\n        setTempData(temp_Data)\r\n    }\r\n    // console.log(tempData);\r\n    // console.log(tempData.id);\r\n\r\n    const handleSS = () => {\r\n\r\n        const db = firebase.database().ref('/OrderStatus/SS/').child(tempData.id);\r\n        // console.log(db);\r\n        db.set({\r\n            Id: tempData.id,\r\n            Address: tempData.address,\r\n            CommMode: tempData.commMode,\r\n            Country: tempData.country,\r\n            // CustomerNotes: tempData.customerNotes,\r\n            Email: tempData.email,\r\n            Name: tempData.name,\r\n            OrderDetails: tempData.orderDetails,\r\n            OrderNotes: tempData.orderNotes,\r\n            Payment: tempData.payment,\r\n            TotalCost: tempData.totalCost,\r\n            Wallet: tempData.wallet,\r\n            OrderID: tempData.orderID\r\n        });\r\n        const rem_db = firebase.database().ref('/OrderStatus/ROC/').child(tempData.id);\r\n        rem_db.remove();\r\n\r\n        setTracking('');\r\n        handleClose1();\r\n    }\r\n\r\n    const handlePayment = () => {\r\n\r\n        const db = firebase.database().ref('/OrderStatus/Shipped/').child(tempData.id);\r\n        // console.log(db);\r\n        db.set({\r\n            Id: tempData.id,\r\n            Address: tempData.address,\r\n            CommMode: tempData.commMode,\r\n            Country: tempData.country,\r\n            // CustomerNotes: tempData.customerNotes,\r\n            Email: tempData.email,\r\n            Name: tempData.name,\r\n            OrderDetails: tempData.orderDetails,\r\n            OrderNotes: tempData.orderNotes,\r\n            Payment: tempData.payment,\r\n            TotalCost: tempData.totalCost,\r\n            Wallet: tempData.wallet,\r\n            OrderID: tempData.orderID\r\n        });\r\n        const rem_db = firebase.database().ref('/OrderStatus/ROC/').child(tempData.id);\r\n        rem_db.remove();\r\n\r\n        ////////////////// POPULARITY\r\n\r\n        const db_update = firebase.database().ref('/Orders');\r\n        db_update.set({\r\n            Revenue: parseInt(orderData.Revenue) + parseInt(tempData.totalCost),\r\n            TotalOrders: orderData.TotalOrders + 1,\r\n            Popularity: orderData.Popularity\r\n        })\r\n\r\n        setTracking('');\r\n        handleClose1();\r\n\r\n        var db_pop = firebase.database().ref('Orders/Popularity/');\r\n        const orderList = tempData.orderDetails;\r\n        \r\n        for (const key in orderList) {\r\n\r\n            // console.log(orderList[key])\r\n            if (orderList[key].Price === 0 || orderList[key].Price === '0') {\r\n                return;\r\n            }\r\n            else {\r\n                // console.log(orderList[key].OrderName)\r\n                db_pop.once(\"value\", snap => {\r\n                    // console.log(snap.val())\r\n                    for (const i in snap.val()) {\r\n                        // console.log(snap.val()[i])\r\n                        // console.log(snap.val()[i].Name)\r\n                        if (snap.val()[i].Name === orderList[key].OrderName) {\r\n                            // console.log(\"found it  \" + snap.val()[i].Name)\r\n\r\n                            let updatedValue = snap.val()[i].Value + orderList[key].OrderQty;\r\n                            // console.log(updatedValue);\r\n\r\n                            const db_update1 = firebase.database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                            db_update1.set({\r\n                                Name: snap.val()[i].Name,\r\n                                Value: updatedValue,\r\n                            })\r\n                            return;\r\n                        }\r\n                        else {\r\n                            // console.log(\"not found\")\r\n                            const db_update1 = firebase.database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                            db_update1.set({\r\n                                Name: orderList[key].OrderName,\r\n                                Value: orderList[key].OrderQty\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const updatedStatusHandler3 = (data) => {\r\n\r\n        // setOpenModal(true);\r\n        // console.log(data.orderDetails);\r\n        var overlay = window.confirm(\"Is Payment Confirmed?\");\r\n\r\n        if (overlay === true) {\r\n            // console.log(\"in updatehandler3\");\r\n            const db = firebase.database().ref('/OrderStatus/Shipped/').child(data.id);\r\n            // console.log(db);\r\n            db.set({\r\n                Id: data.id,\r\n                Address: data.address,\r\n                CommMode: data.commMode,\r\n                Country: data.country,\r\n                // CustomerNotes: data.customerNotes,\r\n                Email: data.email,\r\n                Name: data.name,\r\n                OrderDetails: data.orderDetails,\r\n                OrderNotes: data.orderNotes,\r\n                Payment: data.payment,\r\n                TotalCost: data.totalCost,\r\n                Wallet: data.wallet,\r\n                OrderID: data.orderID\r\n            });\r\n\r\n            const remove_db = firebase.database().ref('/OrderStatus/SS/').child(data.id);\r\n            // console.log(remove_db);\r\n            remove_db.remove();\r\n\r\n            const db_update = firebase.database().ref('/Orders');\r\n            db_update.set({\r\n                Revenue: parseInt(orderData.Revenue) + parseInt(data.totalCost),\r\n                TotalOrders: orderData.TotalOrders + 1,\r\n                Popularity: orderData.Popularity\r\n            })\r\n\r\n\r\n            ////////////////// POPULARITY\r\n\r\n            var db_pop = firebase.database().ref('Orders/Popularity/');\r\n            // console.log(data.orderDetails)\r\n            const orderList = data.orderDetails;\r\n            // console.log(orderList);\r\n\r\n            for (const key in orderList) {\r\n                // console.log(orderList[key])\r\n                if (orderList[key].Price === 0 || orderList[key].Price === '0') {\r\n                    return;\r\n                } else {\r\n                    // console.log(orderList[key].OrderName)\r\n                    db_pop.once(\"value\", snap => {\r\n                        // console.log(snap.val())\r\n                        for (const i in snap.val()) {\r\n                            // console.log(snap.val()[i])\r\n                            // console.log(snap.val()[i].Name)\r\n                            if (snap.val()[i].Name === orderList[key].OrderName) {\r\n                                // console.log(\"found it  \" + snap.val()[i].Name)\r\n\r\n\r\n                                let updatedValue = snap.val()[i].Value + orderList[key].OrderQty;\r\n                                // console.log(updatedValue);\r\n\r\n                                const db_update = firebase.database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                                db_update.set({\r\n                                    Name: snap.val()[i].Name,\r\n                                    Value: updatedValue,\r\n                                })\r\n                                return;\r\n                            }\r\n                            else {\r\n                                // console.log(\"not found\")\r\n                                const db_update = firebase.database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                                db_update.set({\r\n                                    Name: orderList[key].OrderName,\r\n                                    Value: orderList[key].OrderQty\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        }\r\n        else {\r\n            console.log(\"Nothing!\");\r\n        }\r\n    }\r\n\r\n    // ################################# DELETED STATUS \r\n\r\n    const updatedDeleteHandler1 = data => {\r\n        const db = firebase.database().ref('/OrderStatus/TBM/').child(data.id);\r\n        db.remove();\r\n    };\r\n\r\n    const updatedDeleteHandler2 = data => {\r\n        const db = firebase.database().ref('/OrderStatus/TBM/').child(data.id);\r\n        console.log(data);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            CommMode: data.commMode,\r\n            Country: data.country,\r\n            // CustomerNotes: data.customerNotes,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            OrderNotes: data.orderNotes,\r\n            Payment: data.payment,\r\n            TotalCost: data.totalCost,\r\n            Wallet: data.wallet,\r\n            OrderID: data.orderID\r\n        });\r\n        const rem_db = firebase.database().ref('/OrderStatus/ROC/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n\r\n    const updatedDeleteHandler3 = data => {\r\n        const db = firebase.database().ref('/OrderStatus/ROC/').child(data.id);\r\n        // console.log(data);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            CommMode: data.commMode,\r\n            Country: data.country,\r\n            // CustomerNotes: data.customerNotes,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            OrderNotes: data.orderNotes,\r\n            Payment: data.payment,\r\n            TotalCost: data.totalCost,\r\n            Wallet: data.wallet,\r\n            OrderID: data.orderID\r\n        });\r\n        const rem_db = firebase.database().ref('/OrderStatus/SS/').child(data.id);\r\n        rem_db.remove();\r\n    };\r\n\r\n    const updatedDeleteHandler4 = data => {\r\n        const db = firebase.database().ref('/OrderStatus/SS/').child(data.id);\r\n        db.set({\r\n            Id: data.id,\r\n            Address: data.address,\r\n            CommMode: data.commMode,\r\n            Country: data.country,\r\n            // CustomerNotes: data.customerNotes,\r\n            Email: data.email,\r\n            Name: data.name,\r\n            OrderDetails: data.orderDetails,\r\n            OrderNotes: data.orderNotes,\r\n            Payment: data.payment,\r\n            TotalCost: data.totalCost,\r\n            Wallet: data.wallet,\r\n            OrderID: data.orderID\r\n        });\r\n        \r\n        const rem_db = firebase.database().ref('/OrderStatus/Shipped/').child(data.id);\r\n        rem_db.remove();\r\n\r\n        const db_update = firebase.database().ref('/Orders');\r\n        db_update.set({\r\n            Revenue: parseInt(orderData.Revenue) - parseInt(data.totalCost),\r\n            TotalOrders: orderData.TotalOrders - 1,\r\n            Popularity: orderData.Popularity\r\n        })\r\n\r\n        var db_pop = firebase.database().ref('Orders/Popularity/');\r\n        // console.log(data.orderDetails)\r\n        const orderList = data.orderDetails;\r\n        // console.log(orderList);\r\n\r\n        for (const key in orderList) {\r\n            // console.log(orderList[key])\r\n            // console.log(orderList[key].OrderName)\r\n            if (orderList[key].Price === 0 || orderList[key].Price === '0') {\r\n                return;\r\n            } else {\r\n                db_pop.once(\"value\", snap => {\r\n                    // console.log(snap.val())\r\n                    for (const i in snap.val()) {\r\n                        // console.log(snap.val()[i])\r\n                        // console.log(snap.val()[i].Name)\r\n                        if (snap.val()[i].Name === orderList[key].OrderName) {\r\n                            // console.log(\"found it  \" + snap.val()[i].Name)\r\n\r\n\r\n                            let updatedValue = snap.val()[i].Value - orderList[key].OrderQty;\r\n                            // console.log(updatedValue);\r\n\r\n                            const db_update = firebase.database().ref('Orders/Popularity/' + orderList[key].OrderName);\r\n                            db_update.set({\r\n                                Name: snap.val()[i].Name,\r\n                                Value: updatedValue,\r\n                            })\r\n                            return;\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    const tbm_list = tBM.map(item => (\r\n        <OrderCards1\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            commMode={item.commMode}\r\n            country={item.country}\r\n            // customerNotes={item.customerNotes}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            orderNotes={item.orderNotes}\r\n            payment={item.payment}\r\n            totalCost={item.totalCost}\r\n            wallet={item.wallet}\r\n            orderID={item.orderID}\r\n            onUpdate={updatedStatusHandler1}\r\n            onDelete={updatedDeleteHandler1}\r\n        />\r\n    ));\r\n\r\n    const roc_list = rOC.map(item => (\r\n        <OrderCards2\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            commMode={item.commMode}\r\n            country={item.country}\r\n            // customerNotes={item.customerNotes}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            orderNotes={item.orderNotes}\r\n            payment={item.payment}\r\n            totalCost={item.totalCost}\r\n            wallet={item.wallet}\r\n            orderID={item.orderID}\r\n            onUpdate={updatedStatusHandler2}\r\n            onDelete={updatedDeleteHandler2}\r\n        />\r\n    ));\r\n\r\n    const ss_list = ss.map(item => (\r\n        <OrderCards3\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            commMode={item.commMode}\r\n            country={item.country}\r\n            // customerNotes={item.customerNotes}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            orderNotes={item.orderNotes}\r\n            payment={item.payment}\r\n            totalCost={item.totalCost}\r\n            wallet={item.wallet}\r\n            orderID={item.orderID}\r\n            onUpdate={updatedStatusHandler3}\r\n            onDelete={updatedDeleteHandler3}\r\n        />\r\n    ))\r\n\r\n    const shipped_list = shipped.map(item => (\r\n        <OrderCards4\r\n            key={item.id}\r\n            id={item.id}\r\n            address={item.address}\r\n            commMode={item.commMode}\r\n            country={item.country}\r\n            // customerNotes={item.customerNotes}\r\n            email={item.email}\r\n            name={item.name}\r\n            orderDetails={item.orderDetails}\r\n            orderNotes={item.orderNotes}\r\n            payment={item.payment}\r\n            totalCost={item.totalCost}\r\n            wallet={item.wallet}\r\n            orderID={item.orderID}\r\n            onDelete={updatedDeleteHandler4}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* {openModal && <Modal closeModal={setOpenModal}/>} */}\r\n            {/* <Topbar /> */}\r\n\r\n            {/* <TrackingModal commMode orderId={props.orderID}/> */}\r\n\r\n            <Dialog open={open} maxWidth=\"sm\" fullWidth onClose={handleClose}>\r\n                <DialogTitle>Proceed</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Enter Tracking Number</DialogContentText>\r\n                    <TextField value={tracking} onChange={(a) => setTracking(a.target.value)} fullWidth label=\"Tracking Number\" variant=\"standard\"></TextField>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} style={{ border: \"2px solid black\", background: \"#ffffff\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>Cancel</Button>\r\n                    <Button onClick={handleNext1} style={{ border: \"2px solid black\", background: \"#191919\", color: \"#ffffff\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>Next</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={open1} maxWidth=\"md\" fullWidth onClose={handleClose1}>\r\n                <DialogTitle>\r\n                    <Button onClick={handleBack}> \r\n                    {/* <EditIcon style={{ fontSize: \"20px\", color: \"#535353\", marginLeft: \"-50px\"}}></EditIcon>*/}\r\n                    <KeyboardBackspace style={{ fontSize: \"20px\", color: \"#535353\", marginLeft: \"-50px\"}}></KeyboardBackspace>\r\n                    </Button>\r\n                    Messaging Info\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <p><b>Mode of Contact: </b>{messageCommMode}</p>\r\n                    <p><b>ID: </b>{messageID}</p>\r\n                    <p><b>Tracking Number: </b> {tracking}</p>\r\n                    <br></br>\r\n                    <p>Hi there,</p>\r\n                    <p>Your order no. {messageOrderID} was shipped express yesterday and your tracking link is :</p>\r\n                    <p><b>https://auspost.com.au/mypost/track/#/details/{tracking}</b></p>\r\n                    <p>If you ever have a problem with your order, you can quote me your order number and we can go from there.</p>\r\n                    <p>Best of luck!</p>\r\n                    <p>Jae</p>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => handleSS()}  style={{ border: \"2px solid black\", background: \"#ffffff\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>Screenshot Received</Button>\r\n                    <Button onClick={() => handlePayment()} style={{ border: \"2px solid black\", background: \"#ffffff\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>Payment Confirmed</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item sm={12}>\r\n                    {/* <h2 className=\"home_heading\">Hi Name Surname</h2> */}\r\n                    {/* <p className=\"home_text_alt\">Welcome back</p> */}\r\n\r\n                    <h1 className=\"home_text_alt\">Customers</h1>\r\n\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={3} >\r\n                    <div className=\"customer_card\" style={{ background: \"#806EFF\" }}>\r\n                        <p>To be made</p>\r\n                    </div>\r\n\r\n                    <Grid container className=\"individual_section\">\r\n                        {tbm_list}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={3}>\r\n                    <div className=\"customer_card\" style={{ background: \"#FF6EEC\" }}>\r\n                        <p>Ready for contact</p>\r\n                    </div>\r\n\r\n                    <Grid container className=\"individual_section\">\r\n                        {roc_list}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={3}>\r\n                    <div className=\"customer_card\" style={{ background: \"#ff6e6c\" }}>\r\n                        <p>Screenshot Received</p>\r\n                    </div>\r\n\r\n                    <Grid container className=\"individual_section\">\r\n                        {ss_list}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={3}>\r\n                    <div className=\"customer_card\" style={{ background: \"#20F87E\" }}>\r\n                        <p>Payment Confirmed</p>\r\n                    </div>\r\n                    <Grid container className=\"individual_section\">\r\n                        {shipped_list}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CustomerBoard;","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\n\r\nexport default function CartDisplayTextField(props) {\r\n    const { updatedValue } = props;\r\n\r\n    const [updatedPrice, setUpdatedPrice] = useState(props.value.price);\r\n    // console.log(props.value)\r\n    // const uPriceRef = useRef();\r\n\r\n    // const updatePriceHandler = () => {\r\n    //     setUpdatedPrice(prevPrice => {\r\n    //         if (prevPrice !== uPriceRef.current.value)\r\n    //             return uPriceRef.current.value;\r\n    //         else\r\n    //             return prevPrice;\r\n    //     });\r\n    //     updatedValue(uPriceRef.current.value);\r\n    //     // console.log(uPriceRef.current.value)\r\n    //     console.log(updatedPrice)\r\n    // }\r\n\r\n    const updatePriceHandler = (a) => {\r\n        console.log(a)\r\n        setUpdatedPrice(a);\r\n        const newVal = {\r\n            id: props.value.id,\r\n            name: props.value.name,\r\n            price: a,\r\n            description: props.value.description,\r\n            qty: props.value.qty\r\n        }\r\n        updatedValue(newVal);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <p>$ {priceChange}</p>         */}\r\n\r\n            <TextField defaultValue={updatedPrice} onChange={a => updatePriceHandler(a.target.value)} variant=\"standard\"></TextField>\r\n\r\n            {/* <input defaultValue={updatedPrice} ref={uPriceRef}></input> */}\r\n            {/* <button onClick={updatePriceHandler}>OK</button> */}\r\n        </div>\r\n    )\r\n}\r\n","import {  Divider,  Grid,  } from '@material-ui/core';\r\n// import { useState, useRef } from 'react'\r\n\r\nimport classes from './CartDisplay.module.css';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\nimport CartDisplayTextField from './CartDisplayTextField';\r\n\r\nexport default function CartDisplay(props) {\r\n    const { cartItems, onAddHandler, onRemoveHandler, changeCostHandler, updatedValue } = props;\r\n    // const priceRef = useRef();\r\n    // const priceChangeHandler = (data) =>{\r\n    //     setPriceChange(data);\r\n    // }\r\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n    if (itemsPrice > 0) {\r\n        changeCostHandler(itemsPrice.toFixed(2));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Cart Items</h2>\r\n            <Divider />\r\n            <div>{cartItems.length === 0 && <p>Cart is empty</p>}</div>\r\n            {cartItems.map(item => (\r\n                <div key={item.id}>\r\n                    <Grid container sm={12} spacing={1} direction=\"row\">\r\n                        <Grid item sm={6}>\r\n                            <p>{item.name}</p>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={1}>\r\n                            <button variant=\"contained\" className={classes.inc_btn} onClick={() => onRemoveHandler(item)}>-</button>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={1}>\r\n                            <button variant=\"contained\" className={classes.inc_btn} onClick={() => onAddHandler(item)}>+</button>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={1}>\r\n                            <p>{item.qty}</p>\r\n                        </Grid>\r\n\r\n                        <Grid item sm={3}>\r\n                            {/* <p>$ {item.price.toFixed(2)} <span><EditIcon></EditIcon></span></p> */}\r\n                            {/* <FormControl fullWidth variant=\"standard\">\r\n                                <TextField value={updateState(item.price.toFixed(2))}   onChange={e => setUpdatedPrice(e.target.value)} variant=\"standard\"></TextField>\r\n                            </FormControl> */}\r\n                            <CartDisplayTextField value={item} updatedValue={updatedValue}/>\r\n                            {/* <CartDisplayTextField value={item.price.toFixed(2)} updatedValue={updatedValue}/> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            ))}\r\n            {itemsPrice.length !== 0 && (\r\n                <Grid container item direction=\"row\">\r\n                    <Grid item xs={9}>Total Price:</Grid>\r\n                    <Grid item xs={3}>$ {itemsPrice.toFixed(2)}</Grid>\r\n                </Grid>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\nimport './Popup.css';\r\nimport CartDisplay from './Cart/CartDisplay';\r\nimport firebase from \"../../firebase\";\r\n// import CartItems from './Cart/CartItems';\r\n\r\nexport default function Popup(props) {\r\n\r\n  const { setItemList, changeCostHandler } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setItemList(cartItems);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const db = firebase.database().ref(\"Inventory\");\r\n\r\n    db.orderByChild(\"Instock\").equalTo(true).on(\"value\", (response) => {\r\n      // console.log(response.val());\r\n      const data = response.val();\r\n      let productList = [];\r\n      for (const key in data) {\r\n        productList.push({\r\n          id: data[key].Id,\r\n          name: data[key].Name,\r\n          price: data[key].Price,\r\n          category: data[key].Category\r\n        });\r\n      }\r\n      setProducts(productList);\r\n    })\r\n    // const db = firebase.database().ref(\"Inventory/Instock\");\r\n    // db.on(\"value\", (response) => {\r\n    //   console.log(response.val());\r\n    //   const data = response.val();\r\n    //   let productList = [];\r\n    //   for (const key in data) {\r\n    //     productList.push({\r\n    //       id: data[key].Id,\r\n    //       name: data[key].Name,\r\n    //       price: data[key].Price,\r\n    //       description: data[key].Description\r\n    //     });\r\n    //   }\r\n    //   setProducts(productList);\r\n    // })\r\n  }, []);\r\n\r\n  const onAddHandler = (product) => {\r\n    const exist = cartItems.find(item => item.id === product.id);\r\n    if (exist) {\r\n      setCartItems(\r\n        cartItems.map(item =>\r\n          item.id === product.id ? { ...exist, qty: exist.qty + 1 } : item\r\n        )\r\n      );\r\n    }\r\n    else {\r\n      setCartItems([...cartItems, { ...product, qty: 1 }]);\r\n    }\r\n  }\r\n\r\n  const onRemoveHandler = (product) => {\r\n    const exist = cartItems.find(item => item.id === product.id);\r\n    if (exist.qty === 1) {\r\n      setCartItems(cartItems.filter((x) => x.id !== product.id))\r\n    }\r\n    else {\r\n      setCartItems(\r\n        cartItems.map(item =>\r\n          item.id === product.id ? { ...exist, qty: exist.qty - 1 } : item\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  const onGiftHandler = (product) => {\r\n    const exist = cartItems.find(item => item.id === product.id);\r\n    if (exist) {\r\n      setCartItems(\r\n        cartItems.map(item =>\r\n          item.id === product.id ? { ...exist, qty: exist.qty + 1, price: 0 } : item\r\n        )\r\n      );\r\n    }\r\n    else {\r\n      setCartItems([...cartItems, { ...product, qty: 1, price: 0 }]);\r\n    }\r\n  }\r\n\r\n  const updatedValue = (data) => {\r\n    // console.log(data);\r\n    const updatedList = cartItems.find((x) => x.id === data.id);\r\n    // console.log(\"gandu\"+updatedList.price+\" ruko zara : \" + data.price)\r\n    setCartItems(cartItems.map(item =>\r\n      item.id === data.id ? { ...updatedList, price: data.price } : item\r\n    ))\r\n\r\n  }\r\n\r\n  //Search\r\n\r\n  const [searchTerm, setSearchterm] = useState('');\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={handleClickOpen}>+ Add/Remove</Button>\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"xl\" fullWidth style={{ color: \"#DFDFDF\" }}>\r\n\r\n        {/* <Grid container sm={12} md={8}> */}\r\n\r\n\r\n        <DialogTitle style={{ background: \"#DFDFDF\" }}>\r\n          <TextField className=\"txtfld\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Search\"\r\n            type=\"search\"\r\n            variant=\"standard\"\r\n            onChange={event => { setSearchterm(event.target.value) }}\r\n          />\r\n        </DialogTitle>\r\n\r\n        <DialogContent style={{ background: \"#DFDFDF\", height: \"60vh\" }}>\r\n\r\n          <Grid container spacing={5}>\r\n\r\n            <Grid item container sm={12} md={9} spacing={3} >\r\n\r\n              {/* <CartItems products={products} onAddHandler={onAddHandler} onGiftHandler={onGiftHandler} /> */}\r\n              {\r\n                products.filter(val => {\r\n                  if (searchTerm === \"\") {\r\n                    return val;\r\n                  } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                    return val;\r\n                  }\r\n                }).map((val, key) => {\r\n                  return (\r\n                    // <h3>Searched Items</h3>\r\n                    <Grid item sm={4} key={val.id}>\r\n\r\n                      <div className=\"inventory-item\" style={{ background: \"#FFFFFF\" }}>\r\n                        <p className=\"typedish\">{val.name}<span className=\"cost\">&#36;{val.price}</span></p>\r\n                        <p>{val.category}</p>\r\n\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6}>\r\n                            <Button variant=\"contained\" onClick={() => onGiftHandler(val)}>Add as Gift</Button>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                            <Button variant=\"contained\" onClick={() => onAddHandler(val)}>Add to Cart</Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </div>\r\n\r\n                    </Grid>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </Grid>\r\n\r\n            <Grid item container sm={12} md={3} className=\"cart_grid\" style={{overflowY: \"no-scroll\"}}>\r\n\r\n              <CartDisplay cartItems={cartItems} onAddHandler={onAddHandler} onRemoveHandler={onRemoveHandler} changeCostHandler={changeCostHandler} updatedValue={updatedValue} />\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ background: \"#DFDFDF \" }}>\r\n          <Button onClick={handleClose} style={{ border: \"2px solid black\", background: \"#DFDFDF\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>CANCEL</Button>\r\n          <Button onClick={handleClose} className=\"Confirmbut\" style={{ background: \"#191919\", color: \"#ffffff\", padding: \"0.5em 3em\", margin: \"2em 2em 2em 0\" }}>CONFIRM</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}\r\n\r\n","import { useRef, useState } from 'react';\r\nimport { Button, Select, InputLabel, MenuItem, FormControl, Grid, TextField, Divider} from \"@material-ui/core\";\r\nimport { Alert } from '@mui/material';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport classes from './AddCustomerForm.module.css';\r\n\r\nimport Popup from '../UI/Popup';\r\nimport firebase from \"../../firebase\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isSelected = value => value === 'none' || value === '';\r\n\r\nconst AddCustomerForm = () => {\r\n\r\n    const [commMode, setCommMode] = useState('');\r\n    const [paymentMethod, setPaymentMethod] = useState('');\r\n    const [countryDrop, setCountryDrop] = useState('');\r\n    const [totalCost, setTotalCost] = useState(0);\r\n    const [itemList, setItemList] = useState([]);\r\n    const [finalItemList, setFinalItemList] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleCommunicationChange = (event) => {\r\n        setCommMode(event.target.value);\r\n        // console.log(event.target.value);\r\n    };\r\n\r\n    const handleCountryChange = (event) => {\r\n        setCountryDrop(event.target.value);\r\n        // console.log(event.target.value);\r\n    }\r\n\r\n    const handlePaymentChange = (event) => {\r\n        setPaymentMethod(event.target.value);\r\n        // console.log(event.target.value);\r\n    };\r\n\r\n    const changeCostHandler = data => {\r\n        setTotalCost(data);\r\n    }\r\n\r\n    const cartItemList = (items) => {\r\n        for (const key in items) {\r\n            // console.log(key + \" \" + items[key].name)\r\n            finalItemList.push({\r\n                // OrderName: items[key].name,\r\n                OrderName: items[key].name,\r\n                OrderQty: items[key].qty,\r\n                Price: items[key].price\r\n            })\r\n        }\r\n        // console.log(finalItemList);\r\n        setFinalItemList(finalItemList);\r\n        setItemList(items);\r\n\r\n    }\r\n    // console.log(itemList);\r\n\r\n    const nameRef = useRef();\r\n    const addressRef = useRef();\r\n    const cityRef = useRef();\r\n    const stateRef = useRef();\r\n    // const countryRef = useRef();\r\n    const pincodeRef = useRef();\r\n    const idRef = useRef();\r\n    const walletRef = useRef();\r\n    const orderRef = useRef();\r\n    // const discountRef = useRef();\r\n    // const customerRef = useRef();\r\n\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name: true,\r\n        // street: true,\r\n        address: true,\r\n        city: true,\r\n        state: true,\r\n        country: true,\r\n        pincode: true,\r\n        id: true,\r\n        wallet: true,\r\n        order: true,\r\n        itemList: true,\r\n        comm: true,\r\n        payment: true,\r\n        // discount: true,\r\n        // customer: true,\r\n    })\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredName = nameRef.current.value;\r\n        const enteredAddress = addressRef.current.value;\r\n        const enteredCity = cityRef.current.value;\r\n        const enteredState = stateRef.current.value;\r\n        // const enteredCountry = countryRef.current.value;\r\n        const enteredPincode = pincodeRef.current.value;\r\n        const enteredId = idRef.current.value;\r\n        const enteredWallet = walletRef.current.value;\r\n        const enteredOrder = orderRef.current.value;\r\n        const enteredItemList = itemList;\r\n        // const enteredDiscount = discountRef.current.value;\r\n        // const enteredCustomer = customerRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredAddressIsValid = !isEmpty(enteredAddress);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredStateIsValid = !isEmpty(enteredState);\r\n        const enteredCountryIsValid = !isSelected(countryDrop);\r\n        const enteredPincodeIsValid = !isEmpty(enteredPincode);\r\n        const enteredIdIsValid = !isEmpty(enteredId);\r\n        const enteredWalletIsValid = !isEmpty(enteredWallet);\r\n        const enteredOrderIsValid = !isEmpty(enteredOrder);\r\n        const enteredCommIsValid = !isSelected(commMode);\r\n        const enteredPaymentMethodIsValid = !isSelected(paymentMethod);\r\n        const enteredItemListIsValid = enteredItemList.length !== 0;\r\n        // const enteredDiscountIsValid = !isEmpty(enteredDiscount);\r\n        // const enteredCustomerIsValid = !isEmpty(enteredCustomer);\r\n\r\n        setFormInputValidity({\r\n            name: enteredNameIsValid,\r\n            address: enteredAddressIsValid,\r\n            city: enteredCityIsValid,\r\n            state: enteredStateIsValid,\r\n            country: enteredCountryIsValid,\r\n            pincode: enteredPincodeIsValid,\r\n            id: enteredIdIsValid,\r\n            wallet: enteredWalletIsValid,\r\n            order: enteredOrderIsValid,\r\n            itemList: enteredItemListIsValid,\r\n            comm: enteredCommIsValid,\r\n            payment: enteredPaymentMethodIsValid,\r\n            // discount: enteredDiscountIsValid,\r\n            // customer: enteredCustomerIsValid,\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredAddressIsValid && enteredCityIsValid && enteredStateIsValid && enteredCountryIsValid && enteredPincodeIsValid && enteredIdIsValid && enteredWalletIsValid && enteredCommIsValid && enteredPaymentMethodIsValid && enteredItemListIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        const uniq_key = countryDrop + \"_\" + Date.now();\r\n        // console.log(uniq_key);\r\n\r\n        //submit cart data;\r\n        const db = firebase.database().ref('/OrderStatus/TBM/').child(uniq_key);\r\n\r\n        const finalAddress = enteredAddress + \", \" + enteredCity + \", \" + enteredState + \", PIN: \" + enteredPincode;\r\n        // console.log(finalAddress);\r\n        // console.log(totalCost);\r\n        db.set({\r\n            // Id: data.id,\r\n            Name: enteredName,\r\n            Address: finalAddress,\r\n            Country: countryDrop,\r\n            CommMode: commMode,\r\n            Email: enteredId,\r\n            Payment: paymentMethod,\r\n            Wallet: enteredWallet,\r\n            OrderNotes: enteredOrder,\r\n            OrderDetails: finalItemList,\r\n            TotalCost: totalCost,\r\n            OrderID: uniq_key\r\n            // CustomerNotes: enteredCustomer,\r\n            // Discount: enteredDiscount,\r\n        });\r\n\r\n        history.push('/CustomerBoard')\r\n\r\n    }\r\n\r\n    // console.log(totalCost)\r\n\r\n    return (\r\n        <Grid container style={{ marginTop: \"10px\" }}>\r\n\r\n            <h2 className={classes.home_text_heading}>Customers</h2>\r\n\r\n\r\n            <form onSubmit={submitHandler}>\r\n                <Grid container className={classes.cus_form} style={{ overflowY: \"scroll\" }}>\r\n\r\n                    <Grid item container xs={12} md={6} spacing={4}>\r\n\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.name ? (\r\n                                <TextField inputRef={nameRef} label=\"Name\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={nameRef} label=\"Name\" variant=\"standard\" fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.address ? (\r\n                                <TextField fullWidth label=\"Address Line 1\" variant=\"standard\" inputRef={addressRef}></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error fullWidth label=\"Address Line 1\" variant=\"standard\" inputRef={addressRef}></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.city ? (\r\n                                <TextField inputRef={cityRef} label=\"City\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={cityRef} label=\"City\" variant=\"standard\" fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.state ? (\r\n                                <TextField inputRef={stateRef} label=\"State\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={stateRef} label=\"State\" variant=\"standard\" fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {/* {formInputValidity.country ? (\r\n                                <TextField inputRef={countryRef} label=\"Country\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={countryRef} label=\"Country\" variant=\"standard\" fullWidth></TextField>\r\n                                )} */}\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                {formInputValidity.country ? (\r\n                                    <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Country</InputLabel>\r\n                                ) :\r\n                                    (\r\n                                        <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Country</InputLabel>\r\n                                    )}\r\n                                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={countryDrop} onChange={handleCountryChange} fullWidth label=\"Country\">\r\n                                    <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={\"AU\"}>Australia</MenuItem>\r\n                                    <MenuItem value={\"NZ\"}>New Zealand</MenuItem>\r\n                                    <MenuItem value={\"US\"}>United States</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.pincode ? (\r\n                                <TextField inputRef={pincodeRef} label=\"Pincode\" variant=\"standard\" fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error inputRef={pincodeRef} label=\"Pincode\" variant=\"standard\" fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                {formInputValidity.comm ? (\r\n                                    <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Communication Mode</InputLabel>\r\n                                ) :\r\n                                    (\r\n                                        <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Communication Mode</InputLabel>\r\n                                    )}\r\n                                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={commMode} onChange={handleCommunicationChange} fullWidth label=\"Communication Mode\">\r\n                                    <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={\"E-mail\"}>E-Mail</MenuItem>\r\n                                    <MenuItem value={\"Reddit\"}>Reddit</MenuItem>\r\n                                    <MenuItem value={\"Telegram\"}>Telegram</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            {formInputValidity.id ? (\r\n                                <TextField label=\"ID\" variant=\"standard\" inputRef={idRef} fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error label=\"ID\" variant=\"standard\" inputRef={idRef} fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        {/* <Grid item xs={6}>\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                {formInputValidity.payment ? (\r\n                                    <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Payment Method</InputLabel>\r\n                                ) :\r\n                                    (\r\n                                        <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Payment Method</InputLabel>\r\n                                    )}\r\n                                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={paymentMethod} onChange={handlePaymentChange} fullWidth label=\"Payment Method\">\r\n                                    <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={\"paypal\"}>Paypal</MenuItem>\r\n                                    <MenuItem value={\"btc\"}>BTC</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            {formInputValidity.wallet ? (\r\n                                <TextField fullWidth label=\"Wallet Address\" variant=\"standard\" inputRef={walletRef}></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error fullWidth label=\"Wallet Address\" variant=\"standard\" inputRef={walletRef}></TextField>\r\n                                )}\r\n                        </Grid> */}\r\n                        <Grid xs={12}>\r\n                            <Button variant=\"contained\" type=\"submit\" className={classes.submit_btn} style={{ backgroundColor: '#1a1a1a', color: '#fff', padding: '15px 30px', marginLeft: '10px', marginTop: '20px' }}>SUBMIT</Button>\r\n                        </Grid>\r\n\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}></Grid>\r\n\r\n                    <Grid item container xs={12} md={5} spacing={4} className={classes.right_grid}>\r\n\r\n                        <p>Order Details</p>\r\n                        <Divider style={{width:'100%'}} />\r\n                        \r\n                        <Grid item xs={12} className={classes.order_detail}>\r\n                            {itemList.length === 0 && <p>Cart is empty</p>}\r\n                            {itemList.map(item => (\r\n                                <div key={item.id}>\r\n                                    <Grid container sm={12} spacing={1} direction=\"row\">\r\n                                        <Grid item sm={2}>\r\n                                            <p>{item.qty} X </p>\r\n                                        </Grid>\r\n\r\n                                        <Grid item sm={7}>\r\n                                            <p>{item.name}</p>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item sm={3}>\r\n                                            <p>$ {item.price}</p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            ))}\r\n                            {!formInputValidity.itemList && (<Alert variant=\"outlined\" severity=\"error\">\r\n                                Your cart is empty - Please enter items to proceed.\r\n                            </Alert>)}\r\n                        </Grid>\r\n                        <Popup setItemList={cartItemList} changeCostHandler={changeCostHandler} />\r\n\r\n                        <Grid item xs={12}>\r\n                            <br></br>\r\n                            <Grid container item direction=\"row\">\r\n                                <Grid item xs={9}>Total Price: </Grid>\r\n                                {totalCost.length !== 0 ? (\r\n                                    <Grid item xs={3}>$ {totalCost}</Grid>\r\n                                ) :\r\n                                    (\r\n                                        <Grid item xs={3}>$ 0</Grid>\r\n                                    )}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControl fullWidth variant=\"standard\">\r\n                                {formInputValidity.payment ? (\r\n                                    <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Payment Method</InputLabel>\r\n                                ) :\r\n                                    (\r\n                                        <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Payment Method</InputLabel>\r\n                                    )}\r\n                                <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={paymentMethod} onChange={handlePaymentChange} fullWidth label=\"Payment Method\">\r\n                                    <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                    <MenuItem value={\"paypal\"}>Paypal</MenuItem>\r\n                                    <MenuItem value={\"btc\"}>BTC</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                            {formInputValidity.wallet ? (\r\n                                <TextField fullWidth label=\"Wallet Address\" variant=\"standard\" inputRef={walletRef}></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error fullWidth label=\"Wallet Address\" variant=\"standard\" inputRef={walletRef}></TextField>\r\n                                )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {formInputValidity.order ? (\r\n                                <TextField id=\"standard-textarea\" label=\"Order Notes\" multiline variant=\"standard\" fullWidth inputRef={orderRef} />\r\n                            ) :\r\n                                (\r\n                                    <TextField error id=\"standard-textarea\" label=\"Order Notes\" multiline variant=\"standard\" fullWidth inputRef={orderRef} />\r\n                                )}\r\n                        </Grid>\r\n\r\n                        {/* <Grid item xs={12}>\r\n                            {formInputValidity.discount ? (\r\n                                <TextField label=\"Discount Offered\" variant=\"standard\" inputRef={discountRef} fullWidth></TextField>\r\n                            ) :\r\n                                (\r\n                                    <TextField error label=\"Discount Offered\" variant=\"standard\" inputRef={discountRef} fullWidth></TextField>\r\n                                )}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} className={classes.hello}>\r\n                            {formInputValidity.customer ? (\r\n                                <TextField id=\"standard-textarea\" label=\"Customer Notes\" multiline variant=\"standard\" fullWidth inputRef={customerRef} />\r\n                            ) :\r\n                                (\r\n                                    <TextField error id=\"standard-textarea\" label=\"Customer Notes\" multiline variant=\"standard\" fullWidth inputRef={customerRef} />\r\n                                )}\r\n                        </Grid> */}\r\n\r\n                        {/* <Button variant=\"contained\" sx={{backgroundColor: '#191919', color: '#ffffff'}} className=\"\">SUBMIT</Button> */}\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            {/* </Grid> */}\r\n        </Grid >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default AddCustomerForm;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHome(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 17.276,\n    height: 18.715,\n    viewBox: \"0 0 17.276 18.715\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"icons8-home_2_\",\n    \"data-name\": \"icons8-home (2)\",\n    d: \"M22.076,22.715H17.757a1.2,1.2,0,0,1-1.2-1.2V17.2a.959.959,0,0,0-.96-.96h-1.92a.959.959,0,0,0-.96.96v4.319a1.2,1.2,0,0,1-1.2,1.2H7.2a1.2,1.2,0,0,1-1.2-1.2V12.356A3.6,3.6,0,0,1,7.372,9.528l6.82-5.374a.721.721,0,0,1,.891,0L21.9,9.528a3.6,3.6,0,0,1,1.371,2.827v9.16A1.2,1.2,0,0,1,22.076,22.715Z\",\n    transform: \"translate(-6 -4)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/Home.f7632e78.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => { },\r\n    logout: () => { }\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [token, setToken] = useState(null);\r\n    // const [loginState, setLoginState] = useState(null);\r\n\r\n    const userIsLoggedIn = !!token;\r\n    // console.log(userIsLoggedIn);\r\n\r\n    const loginHandler = (token) => {\r\n        // console.log(token)\r\n        setToken(token);\r\n        // setLoginState(true);\r\n    };\r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n        // setLoginState(false);\r\n    };\r\n    \r\n    // const userIsLoggedIn = loginState;\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    // console.log(contextValue);\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 23.999,\n    viewBox: \"0 0 24 23.999\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"User_-_Male\",\n    \"data-name\": \"User - Male\",\n    d: \"M18,19V17a5.223,5.223,0,0,0,1.872-2.952c.354-.027.91-.352,1.074-1.635a1.17,1.17,0,0,0-.474-1.2A5.292,5.292,0,0,0,21,9c0-2.428-.953-4.5-3-4.5A3.181,3.181,0,0,0,15,3C10.758,3,9,5.722,9,9a5.96,5.96,0,0,0,.528,2.214,1.171,1.171,0,0,0-.474,1.2c.164,1.283.72,1.608,1.074,1.635A5.223,5.223,0,0,0,12,17v2c-1,3-9,1-9,8H27C27,20,19,22,18,19Z\",\n    transform: \"translate(-3 -3.001)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUser);\nexport default __webpack_public_path__ + \"static/media/User.97667fea.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDashboard(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 26.276,\n    height: 26.276,\n    viewBox: \"0 0 26.276 26.276\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Dashboard\",\n    d: \"M15.123,14.759H9.284A3.288,3.288,0,0,1,6,11.474V9.284A3.288,3.288,0,0,1,9.284,6h5.839a3.288,3.288,0,0,1,3.284,3.284v2.19A3.288,3.288,0,0,1,15.123,14.759Zm0,17.517H9.284A3.288,3.288,0,0,1,6,28.991V19.5a3.288,3.288,0,0,1,3.284-3.284h5.839A3.288,3.288,0,0,1,18.408,19.5v9.488A3.288,3.288,0,0,1,15.123,32.276Zm13.868,0H23.152a3.288,3.288,0,0,1-3.284-3.284V26.8a3.288,3.288,0,0,1,3.284-3.284h5.839A3.288,3.288,0,0,1,32.276,26.8v2.19A3.288,3.288,0,0,1,28.991,32.276Zm0-10.218H23.152a3.288,3.288,0,0,1-3.284-3.284V9.284A3.288,3.288,0,0,1,23.152,6h5.839a3.288,3.288,0,0,1,3.284,3.284v9.488A3.288,3.288,0,0,1,28.991,22.057Z\",\n    transform: \"translate(-6 -6)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDashboard);\nexport default __webpack_public_path__ + \"static/media/Dashboard.11ad5eb4.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCart(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 27,\n    height: 25,\n    viewBox: \"0 0 27 25\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Cart\",\n    d: \"M2,2A1,1,0,1,0,2,4H3.879a.491.491,0,0,1,.479.359L8.619,18.848A3.006,3.006,0,0,0,11.5,21H22.473a3.01,3.01,0,0,0,2.895-2.211l2.6-9.525A1,1,0,0,0,27,8H7.514L6.277,3.795h0A2.506,2.506,0,0,0,3.879,2ZM12,23a2,2,0,1,0,2,2A2,2,0,0,0,12,23Zm10,0a2,2,0,1,0,2,2A2,2,0,0,0,22,23Z\",\n    transform: \"translate(-1 -2)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCart);\nexport default __webpack_public_path__ + \"static/media/Cart.da6a412b.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPie(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Pie_Chart\",\n    \"data-name\": \"Pie Chart\",\n    d: \"M16,3V14H27A11,11,0,0,0,16,3ZM14,5A11,11,0,1,0,25,16H14Z\",\n    transform: \"translate(-3 -3)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPie);\nexport default __webpack_public_path__ + \"static/media/Pie.7cd6403d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAbc(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19,2c0,0.552-0.448,1-1,1s-1-0.448-1-1h-2c0,0.552-0.448,1-1,1s-1-0.448-1-1h-2c0,0.552-0.448,1-1,1S9,2.552,9,2H7 c0,0.552-0.448,1-1,1S5,2.552,5,2H4C3.448,2,3,2.448,3,3v18c0,0.552,0.448,1,1,1h1c0-0.552,0.448-1,1-1s1,0.448,1,1h2 c0-0.552,0.448-1,1-1s1,0.448,1,1h2c0-0.552,0.448-1,1-1s1,0.448,1,1h2c0-0.552,0.448-1,1-1s1,0.448,1,1h1c0.552,0,1-0.448,1-1V3 c0-0.552-0.448-1-1-1H19z M17,17H7c-0.552,0-1-0.448-1-1v0c0-0.552,0.448-1,1-1h10c0.552,0,1,0.448,1,1v0 C18,16.552,17.552,17,17,17z M17,13H7c-0.552,0-1-0.448-1-1v0c0-0.552,0.448-1,1-1h10c0.552,0,1,0.448,1,1v0 C18,12.552,17.552,13,17,13z M17,9H7C6.448,9,6,8.552,6,8v0c0-0.552,0.448-1,1-1h10c0.552,0,1,0.448,1,1v0C18,8.552,17.552,9,17,9z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAbc);\nexport default __webpack_public_path__ + \"static/media/Abc.8f78abb1.svg\";\nexport { ForwardRef as ReactComponent };","import { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AuthContext from '../../Store/auth-context';\r\n// import Layout from '../Layout/Layout';\r\nimport \"./Sidebar.css\";\r\nimport {ReactComponent as Home } from \"../../Images/Home.svg\";\r\nimport {ReactComponent as User } from \"../../Images/User.svg\";\r\nimport {ReactComponent as Dashboard } from \"../../Images/Dashboard.svg\";\r\nimport {ReactComponent as Cart } from \"../../Images/Cart.svg\";\r\nimport {ReactComponent as Pie } from \"../../Images/Pie.svg\";\r\nimport {ReactComponent as Abc } from \"../../Images/Abc.svg\";\r\n// import Login from '../Login/Login';\r\n\r\nfunction Sidebar() {\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    // const [isLoggedIn, setIsLoggedIn] = useState(authCtx.isLoggedIn)\r\n    const isLoggedIn = authCtx.isLoggedIn;\r\n    // console.log(isLoggedIn);\r\n\r\n    const logoutHandler = () => {\r\n        authCtx.logout();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* {\r\n                !isLoggedIn && (\r\n                    <div>\r\n                        <h2>hellog</h2>\r\n                    </div>\r\n                )\r\n            } */}\r\n            {isLoggedIn && (\r\n                <div className=\"sidebar\">\r\n                    <b><p style={{marginLeft : \"15px\" , marginTop: \"50px\"}}>Rootlab</p></b>\r\n                    <div className=\"links\">\r\n\r\n                        <NavLink to='/Home' activeClassName=\"active\">\r\n                            <Home style={{marginTop : \"20px\"}} className='Home-1'></Home>\r\n                            <h4 style={{marginLeft : \"20px\"}}>Home</h4>\r\n                        </NavLink>\r\n                        <NavLink to='/AddCustomerForm' activeClassName=\"active\">\r\n                            <User style={{marginTop : \"20px\"}} className=\"User-1\"></User>\r\n                            <h4 style={{marginLeft : \"20px\"}}>Add Order</h4>\r\n                        </NavLink>\r\n                        <NavLink to='/CustomerBoard' activeClassName=\"active\">\r\n                            <Dashboard style={{marginTop : \"20px\"}} className=\"Dashboard-1\"></Dashboard>\r\n                            <h4 style={{marginLeft : \"20px\"}}>Customer Board</h4>\r\n                        </NavLink>\r\n                        <NavLink to='/Inventory' activeClassName=\"active\">\r\n                            <Abc style={{marginTop : \"20px\"}} className=\"Abc-1\"></Abc>\r\n                            <h4 style={{marginLeft : \"20px\"}}>Inventory</h4>\r\n                        </NavLink>\r\n                        {/* <NavLink to='/AddInventory' activeClassName=\"active\">\r\n                    <h4>Add Inventory</h4>\r\n                </NavLink> */}\r\n                        <NavLink to='/CompletedOrders' activeClassName=\"active\">\r\n                        <Cart style={{marginTop : \"20px\"}} className=\"Cart-1\"></Cart>\r\n                            <h4 style={{marginLeft : \"20px\"}}>Completed Orders</h4>\r\n                        </NavLink>\r\n                        {/* <NavLink to='/Login' activeClassName='active'>\r\n                            <h4>Login</h4>\r\n                        </NavLink> */}\r\n                        <NavLink to='/Statistics' activeClassName=\"active\">\r\n                            <Pie style={{marginTop : \"20px\"}} className=\"Pie-1\"></Pie>\r\n                            <h4 style={{marginLeft : \"20px\"}}>Statistics</h4>\r\n                        </NavLink>\r\n                        <br></br>\r\n\r\n\r\n                        {/* <NavLink to='/'>\r\n                            <h4 onClick={logoutHandler}>Logout</h4>\r\n                        </NavLink> */}\r\n                        <button onClick={logoutHandler} style={{marginTop : \"170px\", backgroundColor : \"#1a1a1a\" , color: \"#fff\", padding : \"13px 82px\" ,borderRadius : \"5px\" , border : \"none\" }}><b>Logout</b></button>\r\n                    </div>\r\n                </div>\r\n            ) \r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import { Fragment } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport SideBar from '../Utilities/Sidebar';\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Grid container className={classes.layout}>\r\n                <Grid item sm={2}>\r\n                    <SideBar />\r\n                </Grid>\r\n                <Grid item sm={10}>\r\n                    <main className={classes.main}>{props.children}</main>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Layout;","import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, TextField } from '@material-ui/core';\r\nimport { Select, InputLabel, MenuItem, FormControl } from \"@material-ui/core\";\r\nimport React, { useState, useRef } from 'react'\r\n\r\nimport firebase from \"../../firebase\";\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isSelected = value => value === 'none' || value === '';\r\n\r\nexport default function InventoryForm() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [categoryDrop, setCategoryDrop] = useState('');\r\n\r\n    const [formValidity, setFormValidity] = useState({\r\n        name: true,\r\n        cost: true,\r\n        category: true\r\n    })\r\n\r\n    const handleCategoryChange = (event) => {\r\n        setCategoryDrop(event.target.value);\r\n        // console.log(event.target.value);\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setFormValidity({\r\n            name: true,\r\n            cost: true,\r\n            category: true\r\n        })\r\n        // setItemList(cartItems);\r\n    };\r\n\r\n    const nameRef = useRef();\r\n    const costRef = useRef();\r\n    // const descriptionRef = useRef();\r\n\r\n    const submitHandler = (event) => {\r\n\r\n        // event.preventDefault();\r\n        \r\n        const enteredName = nameRef.current.value;\r\n        const enteredCost = costRef.current.value;\r\n        // const enteredDescription = descriptionRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredCostIsValid = !isEmpty(enteredCost);\r\n        // const enteredDescriptionIsValid = !isEmpty(enteredDescription);\r\n        const enteredCategoryIsValid = !isSelected(categoryDrop);\r\n\r\n        setFormValidity({\r\n            name: enteredNameIsValid,\r\n            cost: enteredCostIsValid,\r\n            // description: enteredDescriptionIsValid\r\n            category: enteredCategoryIsValid\r\n        })\r\n\r\n        const formIsValid = enteredNameIsValid && enteredCostIsValid && enteredCategoryIsValid;\r\n\r\n        if (!formIsValid) {\r\n            return;\r\n        }\r\n\r\n        const db = firebase.database().ref('/Inventory').child(enteredName);\r\n        db.set({\r\n            Name: enteredName,\r\n            Price: enteredCost,\r\n            // Description: enteredDescription,\r\n            Category: categoryDrop,\r\n            Id: enteredName,\r\n            Instock: true\r\n        })\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button style={{ backgroundColor: \"#1a1a1a\", marginTop: \"100px\", marginLeft: \"-155px\" }} variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>+ Add Items</Button>\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth style={{ color: \"#DFDFDF\", padding: \"30px 50px 30px 50px\" }}>\r\n\r\n                {/* <Grid container sm={12} md={8}> */}\r\n\r\n                <DialogTitle style={{ background: \"#DFDFDF\" }}>\r\n                    ADD ITEMS\r\n                    <Divider />\r\n                </DialogTitle>\r\n\r\n                <DialogContent style={{ background: \"#DFDFDF\" }}>\r\n\r\n                    <Grid container style={{ marginTop: \"0px\" }}>\r\n                        <Grid container sm={12} spacing={0} >\r\n\r\n                            <Grid container xs={12} spacing={4}>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.name ? (\r\n                                        <TextField inputRef={nameRef} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                    ) :\r\n                                        (\r\n                                            <TextField error inputRef={nameRef} fullWidth label=\"Name\" variant=\"standard\"></TextField>\r\n                                        )}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    {formValidity.cost ? (\r\n                                        <TextField inputRef={costRef} type=\"text\" inputMode=\"decimal\" fullWidth label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    ) : (\r\n                                        <TextField error inputRef={costRef} type=\"text\" inputMode=\"decimal\" fullWidth label=\"Total Cost\" variant=\"standard\"></TextField>\r\n                                    )}\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl fullWidth variant=\"standard\">\r\n                                        {formValidity.category ? (\r\n                                            <InputLabel fullWidth id=\"demo-simple-select-standard-label\">Category</InputLabel>\r\n                                        ) :\r\n                                            (\r\n                                                <InputLabel error fullWidth id=\"demo-simple-select-standard-label\">Category</InputLabel>\r\n                                            )}\r\n                                        <Select labelId=\"demo-simple-select-standard-label\" id=\"demo-simple-select-standard\" value={categoryDrop} onChange={handleCategoryChange} fullWidth label=\"Category\">\r\n                                            <MenuItem value=\"none\"><em>None</em></MenuItem>\r\n                                            <MenuItem value={\"Gourmet LC\"}>Gourmet LC</MenuItem>\r\n                                            <MenuItem value={\"Medicinal LC\"}>Medicinal LC</MenuItem>\r\n                                            <MenuItem value={\"Glow in the dark Mushroom\"}>Glow in the dark Mushroom</MenuItem>\r\n                                            <MenuItem value={\"Mycology Supplies\"}>Mycology Supplies</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions style={{ background: \"#DFDFDF \" }}>\r\n                    <Button onClick={handleClose} style={{ border: \"2px solid black\", background: \"#DFDFDF\", color: \"#191919\", padding: \"0.40em 4em\", margin: \"2em 2em 2em 0\" }}>CANCEL</Button>\r\n                    <Button onClick={submitHandler} className=\"Confirmbut\" style={{ background: \"#191919\", color: \"#ffffff\", padding: \"0.5em 3em\", margin: \"2em 2em 2em 0\" }}>CONFIRM</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\n// import { dividerClasses } from '@mui/material';\r\n// import '../Inventory/Inventory.css';\r\nimport classes from './InventoryCard.module.css';\r\n\r\nconst Cardddd = (props) => {\r\n\r\n    const { updatedStatusHandler } = props;\r\n\r\n    const handleChange = (data) => {\r\n        updatedStatusHandler(data);\r\n    };\r\n    // const out = !props.instock;\r\n    if (props.instock === true) {\r\n        return (\r\n            <Grid item sm={4}>\r\n                <div className={classes.invent_item} style={{ background: \"#FFFFFF\" }}>\r\n                    <p className={classes.typedish}>{props.name} <span className={classes.cost} >&#36;{props.price}</span></p>\r\n                    <p>{props.category}</p>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <button classes={classes.status_btn} onClick={() => handleChange(props)}>Change Status</button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Grid item sm={4}>\r\n                <div className={classes.invent_item} style={{ background: \"#FFE5E5\" }}>\r\n                    <p className={classes.typedish}>{props.name} <span className={classes.cost} >&#36;{props.price}  </span></p>\r\n                    <p> {props.category} </p>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <p style={{ color: \"#FF0000\", fontSize: \"14px\" }}>OUT OF STOCK</p>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <button classes={classes.status_btn} onClick={() => handleChange(props)}>Change Status</button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n// return (\r\n//     {\r\n//         out && (\r\n//         <Grid item sm={4}>\r\n//             <div className={classes.invent_item} style={{ background: \"#FFFFFF\" }}>\r\n//                 <p className={classes.typedish}>{props.name} <span className={classes.cost} >&#36;{props.price}</span></p>\r\n//                 <p>{props.description}</p>\r\n//                 <Grid container>\r\n//                     <Grid item xs={6}>\r\n//                     </Grid>\r\n//                     <Grid item xs={6}>\r\n//                         <button classes={classes.status_btn} onClick={() => handleChange(props)}>Change Status</button>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </div>\r\n//         </Grid>\r\n//     )\r\n// }\r\n// );\r\n\r\n\r\nexport default Cardddd;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport './Inventory.css';\r\n\r\nimport firebase from \"../../firebase\";\r\n// import InventoryCard from '../UI/InventoryCard';\r\n// import InventoryCardUnchecked from '../UI/InventoryCardUnchecked';\r\nimport InventoryForm from './InventoryForm.js';\r\nimport { TextField } from '@mui/material';\r\n// import { ClearOutlined } from '@mui/icons-material';\r\nimport Cardddd from '../UI/Cardddd';\r\n\r\nconst Inventory = () => {\r\n\r\n    // const [invIn, setInvIn] = useState([]);\r\n    // const [invOut, setInvOut] = useState([]);\r\n\r\n    const [searchTerm, setSearchterm] = useState('');\r\n\r\n    // useEffect(() => {\r\n    //     const db = firebase.database().ref(\"Inventory/Instock\");\r\n    //     db.on(\"value\", (response) => {\r\n    //         const data = response.val();\r\n    //         let invItem_in = [];\r\n    //         for (const key in data) {\r\n    //             invItem_in.push({\r\n    //                 id: key,\r\n    //                 price: data[key].Price,\r\n    //                 instock: data[key].Instock,\r\n    //                 description: data[key].Description,\r\n    //                 name: data[key].Name,\r\n    //             });\r\n    //         }\r\n    //         setInvIn(invItem_in);\r\n    //     });\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     const db1 = firebase.database().ref(\"Inventory/Outstock\");\r\n    //     db1.on(\"value\", (response) => {\r\n    //         const data = response.val();\r\n    //         let invItem_out = []\r\n    //         for (const key in data) {\r\n    //             invItem_out.push({\r\n    //                 id: key,\r\n    //                 price: data[key].Price,\r\n    //                 instock: data[key].Instock,\r\n    //                 description: data[key].Description,\r\n    //                 name: data[key].Name,\r\n    //             });\r\n    //         }\r\n    //         setInvOut(invItem_out);\r\n    //     });\r\n    // }, []);\r\n\r\n    // ###################### Event Handling\r\n\r\n    // const updatedStatusHandler = (data) => {\r\n\r\n    //     const db = firebase.database().ref('/Inventory/Outstock/').child(data.id);\r\n\r\n    //     db.set({\r\n    //         Id: data.id,\r\n    //         Name: data.name,\r\n    //         Description: data.description,\r\n    //         Price: data.price,\r\n    //         Instock: !data.instock,\r\n    //     });\r\n\r\n    //     const rem_db = firebase.database().ref('/Inventory/Instock/').child(data.id);\r\n    //     rem_db.remove();\r\n    // };\r\n\r\n    // const uncheckedStatusHandler = (data) => {\r\n\r\n    //     const db = firebase.database().ref('/Inventory/Instock/').child(data.id);\r\n\r\n    //     db.set({\r\n    //         Id: data.id,\r\n    //         Name: data.name,\r\n    //         Description: data.description,\r\n    //         Price: data.price,\r\n    //         Instock: !data.instock,\r\n    //     });\r\n\r\n    //     const rem_db = firebase.database().ref('/Inventory/Outstock/').child(data.id);\r\n    //     rem_db.remove();\r\n    // }\r\n\r\n    // const inv_list = invIn.map(item => (\r\n    //     <InventoryCard\r\n    //         key={item.id}\r\n    //         id={item.id}\r\n    //         price={item.price}\r\n    //         description={item.description}\r\n    //         name={item.name}\r\n    //         instock={item.instock}\r\n    //         updatedStatusHandler={updatedStatusHandler}\r\n    //     />\r\n    // ));\r\n\r\n    // const inv_list_out = invOut.map(item => (\r\n    //     <InventoryCardUnchecked\r\n    //         key={item.id}\r\n    //         id={item.id}\r\n    //         price={item.price}\r\n    //         description={item.description}\r\n    //         name={item.name}\r\n    //         instock={item.instock}\r\n    //         uncheckedStatusHandler={uncheckedStatusHandler}\r\n    //     />\r\n    // ))\r\n\r\n    const [finalList, setFinalList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const db1 = firebase.database().ref(\"Inventory\");\r\n        db1.on(\"value\", (response) => {\r\n            const data = response.val();\r\n            let invList = [];\r\n            for (const key in data) {\r\n                invList.push({\r\n                    id: key,\r\n                    price: data[key].Price,\r\n                    instock: data[key].Instock,\r\n                    category: data[key].Category,\r\n                    name: data[key].Name,\r\n                });\r\n            }\r\n            setFinalList(invList);\r\n        });\r\n    }, []);\r\n\r\n    console.log(finalList);\r\n    const updateStatus = (data) => {\r\n\r\n        const db = firebase.database().ref('/Inventory/').child(data.id);\r\n\r\n        db.update({\r\n            Instock: !data.instock,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <h1>Inventory</h1>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField className=\"txtfld\"\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Search\"\r\n                        type=\"search\"\r\n                        variant=\"standard\"\r\n                        onChange={event => { setSearchterm(event.target.value) }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <InventoryForm />\r\n\r\n            <Grid container spacing={3} className=\"main_right\">\r\n                {\r\n                    finalList.filter(val => {\r\n                        if (searchTerm === \"\") {\r\n                            return val;\r\n                        }\r\n                        else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                            return val;\r\n                        }\r\n                        // return val;\r\n                    }).map((item, key) => {;\r\n                        return (\r\n                            <Cardddd\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                price={item.price}\r\n                                category={item.category}\r\n                                name={item.name}\r\n                                instock={item.instock}\r\n                                updatedStatusHandler={updateStatus}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n                {/* {inv_list}\r\n                {inv_list_out} */}\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\nexport default Inventory;","import React, { useRef, useContext } from 'react'\r\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\r\nimport AuthContext from '../../Store/auth-context';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nconst Login = () => {\r\n\r\n    const paperStyle = { padding: 20, height: '57vh', width: 500, margin: \"60px 230px\", backgroundColor: \"#fafafa\" }\r\n    const avatarStyle = { backgroundColor: '#1bbd7e' }\r\n    const btnstyle = { margin: '8px 0' }\r\n\r\n    // const history = useHistory();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const submitHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const enteredEmail = emailRef.current.value;\r\n        const enteredPassword = passwordRef.current.value;\r\n\r\n        const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCir6THbXYEXyts-owoowDVRo7XVXqZPFQ';\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: enteredEmail,\r\n                password: enteredPassword,\r\n                returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then((res) => {\r\n                //   setIsLoading(false);\r\n                if (res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    return res.json().then((data) => {\r\n                        let errorMessage = 'Authentication failed!';\r\n                        throw new Error(errorMessage);\r\n                    });\r\n                }\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n                authCtx.login(data.idToken);\r\n                // console.log(authCtx)\r\n                // history.replace('/Home');\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid className='loginBox'>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>R</Avatar>\r\n                    <h2>Sign In</h2>\r\n                </Grid>\r\n                <form onSubmit={submitHandler}>\r\n\r\n                    <TextField label='Username' placeholder='Enter username' inputRef={emailRef} fullWidth required />\r\n                    <br />\r\n                    <br />\r\n                    <TextField label='Password' placeholder='Enter password' type='password' inputRef={passwordRef} fullWidth required />\r\n                    <br />\r\n                    <br />\r\n                    {/* <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                        />\r\n                        \r\n                    }\r\n                    label=\"Remember me\"\r\n                /> */}\r\n                    <br />\r\n                    <br />\r\n                    <Button type='submit' color='primary' variant=\"contained\" style={btnstyle} fullWidth>Sign in</Button>\r\n                    {/* <Typography >\r\n                    <Link href=\"#\" >\r\n                    Forgot password ?\r\n                    </Link>\r\n                </Typography> */}\r\n                </form>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useContext } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Home from './Components/Home/Home';\r\nimport PendingOrders from './Components/PendingOrders/PendingOrders';\r\nimport Statistics from './Components/Statistics/Statistics';\r\n// import AddCustomer from './Components/AddCustomer/AddCustomer';\r\nimport CustomerBoard from './Components/CustomerBoard/CustomerBoard';\r\nimport AddCustomerForm from './Components/AddCustomer/AddCustomerForm';\r\nimport Layout from './Components/Layout/Layout';\r\nimport Inventory from './Components/Inventory/Inventory';\r\nimport Login from './Components/Login/Login';\r\nimport AuthContext from './Store/auth-context';\r\n// import AddInventory from './Components/AddInventory/AddInventory';\r\n\r\nfunction App() {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  return (\r\n    <Layout>\r\n\r\n      <Switch>\r\n\r\n        <Route path='/' exact>\r\n          {isLoggedIn && (\r\n            <Redirect to='/Home'></Redirect>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Login'>\r\n          {isLoggedIn && (\r\n            <Redirect to='/Home'></Redirect>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Login />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Home'>\r\n          {isLoggedIn && (\r\n            <Home />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/AddCustomerForm'>\r\n          {isLoggedIn && (\r\n            <AddCustomerForm />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/CustomerBoard'>\r\n          {isLoggedIn && (\r\n            <CustomerBoard />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Inventory'>\r\n          {isLoggedIn && (\r\n            <Inventory />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        {/* <Route path='/AddInventory'>\r\n          <AddInventory />\r\n        </Route> */}\r\n        <Route path='/CompletedOrders'>\r\n          {isLoggedIn && (\r\n            <PendingOrders />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='/Statistics'>\r\n          {isLoggedIn && (\r\n            <Statistics />\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Redirect to='/Login' />\r\n          )}\r\n        </Route>\r\n\r\n        <Route path='*'>\r\n          <Redirect to='/' />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './Store/auth-context';\n\nReactDOM.render(\n    <AuthContextProvider>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </AuthContextProvider>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customer_card\":\"OrderCards_customer_card__10hP8\",\"order_details\":\"OrderCards_order_details__3k-_D\",\"order_section\":\"OrderCards_order_section__3HGV8\",\"action_icons\":\"OrderCards_action_icons__1imba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invent_item\":\"InventoryCard_invent_item__Et6wq\",\"typedish\":\"InventoryCard_typedish__3mZVs\",\"cost\":\"InventoryCard_cost__1LyRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbar\":\"AddCustomerForm_topbar__358iG\",\"home_heading\":\"AddCustomerForm_home_heading__owXK1\",\"home_text_heading\":\"AddCustomerForm_home_text_heading__2AS86\",\"home_text_alt\":\"AddCustomerForm_home_text_alt__1Y1t-\",\"cus_form\":\"AddCustomerForm_cus_form__2n_PK\",\"right_grid\":\"AddCustomerForm_right_grid__3AScP\",\"order_detail\":\"AddCustomerForm_order_detail__3dipg\",\"submit_btn\":\"AddCustomerForm_submit_btn__2ubkK\",\"hello\":\"AddCustomerForm_hello__3hgmg\"};"],"sourceRoot":""}